2020-03-04 00:56:05.392 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 00:56:06.236 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 00:56:06.372 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 00:56:06.449 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 00:56:06.457 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 00:56:06.459 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 00:56:06.706 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 00:56:06.707 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 00:56:06.708 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 00:56:07.085 +03:30 [INF] Server desktop-al52q8t:15272:930b963f successfully announced in 354/83570000000003 ms
2020-03-04 00:56:07.087 +03:30 [INF] Server desktop-al52q8t:15272:4ca6a39d successfully announced in 586/7177 ms
2020-03-04 00:56:07.109 +03:30 [INF] Server desktop-al52q8t:15272:4ca6a39d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 00:56:07.109 +03:30 [INF] Server desktop-al52q8t:15272:930b963f is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 00:56:07.210 +03:30 [INF] 4 servers were removed due to timeout
2020-03-04 00:56:08.300 +03:30 [INF] Server desktop-al52q8t:15272:4ca6a39d all the dispatchers started
2020-03-04 00:56:08.336 +03:30 [INF] Server desktop-al52q8t:15272:930b963f all the dispatchers started
2020-03-04 00:56:10.029 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 00:56:10.031 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 00:56:10.032 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 00:56:10.033 +03:30 [INF] Hosting environment: Development
2020-03-04 00:56:10.035 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 00:56:12.340 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 00:56:13.115 +03:30 [INF] Request finished in 775.8702000000001ms 404 
2020-03-04 00:58:37.470 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 00:58:37.907 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 00:58:37.965 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 00:58:37.989 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 00:58:37.991 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 00:58:37.993 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 00:58:38.110 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 00:58:38.119 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 00:58:38.128 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 00:58:38.388 +03:30 [INF] Server desktop-al52q8t:1784:3c900ffc successfully announced in 249/33280000000002 ms
2020-03-04 00:58:38.388 +03:30 [INF] Server desktop-al52q8t:1784:f78b1e02 successfully announced in 370/9782 ms
2020-03-04 00:58:38.409 +03:30 [INF] Server desktop-al52q8t:1784:3c900ffc is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 00:58:38.409 +03:30 [INF] Server desktop-al52q8t:1784:f78b1e02 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 00:58:38.862 +03:30 [INF] Server desktop-al52q8t:1784:3c900ffc all the dispatchers started
2020-03-04 00:58:39.001 +03:30 [INF] Server desktop-al52q8t:1784:f78b1e02 all the dispatchers started
2020-03-04 00:58:40.482 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 00:58:40.484 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 00:58:40.486 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 00:58:40.488 +03:30 [INF] Hosting environment: Development
2020-03-04 00:58:40.490 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 00:58:41.659 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 00:58:41.914 +03:30 [INF] Request finished in 254.3633ms 404 
2020-03-04 00:58:41.999 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 00:58:42.002 +03:30 [INF] Request finished in 2.3775ms 0 
2020-03-04 00:59:09.936 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 00:59:09.977 +03:30 [INF] Authorization failed.
2020-03-04 00:59:09.983 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 00:59:10.011 +03:30 [INF] Request finished in 75.1606ms 401 
2020-03-04 00:59:23.311 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 00:59:24.384 +03:30 [INF] Successfully validated the token.
2020-03-04 00:59:24.389 +03:30 [INF] Authorization failed.
2020-03-04 00:59:24.392 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 00:59:24.397 +03:30 [INF] Request finished in 1097.9495ms 403 
2020-03-04 01:02:02.417 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:02:02.422 +03:30 [INF] Authorization failed.
2020-03-04 01:02:02.424 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 01:02:02.425 +03:30 [INF] Request finished in 7.916200000000001ms 401 
2020-03-04 01:02:10.642 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:02:10.645 +03:30 [INF] Successfully validated the token.
2020-03-04 01:02:10.647 +03:30 [INF] Authorization failed.
2020-03-04 01:02:10.649 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:02:10.651 +03:30 [INF] Request finished in 9.7974ms 403 
2020-03-04 01:02:14.973 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:02:14.977 +03:30 [INF] Successfully validated the token.
2020-03-04 01:02:14.979 +03:30 [INF] Authorization failed.
2020-03-04 01:02:14.981 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:02:14.984 +03:30 [INF] Request finished in 11.367600000000001ms 403 
2020-03-04 01:03:13.763 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:03:13.767 +03:30 [INF] Successfully validated the token.
2020-03-04 01:03:13.769 +03:30 [INF] Authorization failed.
2020-03-04 01:03:13.770 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:03:13.772 +03:30 [INF] Request finished in 8.855500000000001ms 403 
2020-03-04 01:03:38.516 +03:30 [INF] 2 servers were removed due to timeout
2020-03-04 01:04:15.549 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:04:15.988 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:04:16.045 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:04:16.069 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:04:16.070 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:04:16.072 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:04:16.175 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:04:16.183 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:04:16.184 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:04:16.452 +03:30 [INF] Server desktop-al52q8t:7144:595b4ce4 successfully announced in 257/0915 ms
2020-03-04 01:04:16.452 +03:30 [INF] Server desktop-al52q8t:7144:eb801756 successfully announced in 353/29240000000004 ms
2020-03-04 01:04:16.469 +03:30 [INF] Server desktop-al52q8t:7144:595b4ce4 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:04:16.469 +03:30 [INF] Server desktop-al52q8t:7144:eb801756 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:04:16.874 +03:30 [INF] Server desktop-al52q8t:7144:595b4ce4 all the dispatchers started
2020-03-04 01:04:17.115 +03:30 [INF] Server desktop-al52q8t:7144:eb801756 all the dispatchers started
2020-03-04 01:04:18.501 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:04:18.503 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:04:18.505 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:04:18.506 +03:30 [INF] Hosting environment: Development
2020-03-04 01:04:18.508 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:04:19.698 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:04:19.846 +03:30 [INF] Request finished in 148.8611ms 404 
2020-03-04 01:04:19.884 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:04:19.888 +03:30 [INF] Request finished in 3.8196000000000003ms 0 
2020-03-04 01:04:30.032 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:04:31.668 +03:30 [INF] Successfully validated the token.
2020-03-04 01:04:31.679 +03:30 [INF] Authorization failed.
2020-03-04 01:04:31.683 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:04:31.708 +03:30 [INF] Request finished in 1676.0389ms 403 
2020-03-04 01:04:34.469 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:04:34.476 +03:30 [INF] Successfully validated the token.
2020-03-04 01:04:34.478 +03:30 [INF] Authorization failed.
2020-03-04 01:04:34.479 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:04:34.481 +03:30 [INF] Request finished in 22.924200000000003ms 403 
2020-03-04 01:04:35.398 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:04:35.431 +03:30 [INF] Successfully validated the token.
2020-03-04 01:04:35.434 +03:30 [INF] Authorization failed.
2020-03-04 01:04:35.460 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:04:35.508 +03:30 [INF] Request finished in 109.5049ms 403 
2020-03-04 01:05:20.159 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:05:20.585 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:05:20.646 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:05:20.671 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:05:20.673 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:05:20.675 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:05:20.785 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:05:20.787 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:05:20.788 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:05:21.034 +03:30 [INF] Server desktop-al52q8t:11452:07aeb7fa successfully announced in 332/78720000000004 ms
2020-03-04 01:05:21.036 +03:30 [INF] Server desktop-al52q8t:11452:3b6db982 successfully announced in 239/25050000000002 ms
2020-03-04 01:05:21.055 +03:30 [INF] Server desktop-al52q8t:11452:07aeb7fa is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:05:21.055 +03:30 [INF] Server desktop-al52q8t:11452:3b6db982 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:05:21.450 +03:30 [INF] Server desktop-al52q8t:11452:07aeb7fa all the dispatchers started
2020-03-04 01:05:21.633 +03:30 [INF] Server desktop-al52q8t:11452:3b6db982 all the dispatchers started
2020-03-04 01:05:23.177 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:05:23.178 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:05:23.180 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:05:23.182 +03:30 [INF] Hosting environment: Development
2020-03-04 01:05:23.183 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:05:24.292 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:05:24.471 +03:30 [INF] Request finished in 180.3176ms 404 
2020-03-04 01:05:24.500 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:05:24.503 +03:30 [INF] Request finished in 2.2422ms 0 
2020-03-04 01:05:34.568 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:05:35.506 +03:30 [INF] Successfully validated the token.
2020-03-04 01:05:35.583 +03:30 [INF] Authorization failed.
2020-03-04 01:05:35.587 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:05:35.599 +03:30 [INF] Request finished in 1031.1992ms 403 
2020-03-04 01:06:17.679 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:06:17.685 +03:30 [INF] Successfully validated the token.
2020-03-04 01:06:17.700 +03:30 [INF] Authorization failed.
2020-03-04 01:06:17.702 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:06:17.715 +03:30 [INF] Request finished in 35.4728ms 403 
2020-03-04 01:06:45.772 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:06:45.778 +03:30 [INF] Successfully validated the token.
2020-03-04 01:06:45.781 +03:30 [INF] Authorization failed.
2020-03-04 01:06:45.782 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:06:45.797 +03:30 [INF] Request finished in 12.2112ms 403 
2020-03-04 01:08:07.930 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:08:07.934 +03:30 [INF] Successfully validated the token.
2020-03-04 01:08:07.936 +03:30 [INF] Authorization failed.
2020-03-04 01:08:07.937 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:08:07.939 +03:30 [INF] Request finished in 9.3449ms 403 
2020-03-04 01:08:31.790 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:08:31.820 +03:30 [INF] Successfully validated the token.
2020-03-04 01:08:31.822 +03:30 [INF] Authorization failed.
2020-03-04 01:08:31.824 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:08:31.826 +03:30 [INF] Request finished in 49.5828ms 403 
2020-03-04 01:10:21.367 +03:30 [INF] 4 servers were removed due to timeout
2020-03-04 01:10:53.010 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:10:53.409 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:10:53.463 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:10:53.486 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:10:53.488 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:10:53.489 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:10:53.602 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:10:53.612 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:10:53.612 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:10:53.854 +03:30 [INF] Server desktop-al52q8t:11736:d3592a35 successfully announced in 231/6021 ms
2020-03-04 01:10:53.855 +03:30 [INF] Server desktop-al52q8t:11736:6e7e2fed successfully announced in 337/67040000000003 ms
2020-03-04 01:10:53.874 +03:30 [INF] Server desktop-al52q8t:11736:d3592a35 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:10:53.874 +03:30 [INF] Server desktop-al52q8t:11736:6e7e2fed is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:10:54.433 +03:30 [INF] Server desktop-al52q8t:11736:d3592a35 all the dispatchers started
2020-03-04 01:10:54.492 +03:30 [INF] Server desktop-al52q8t:11736:6e7e2fed all the dispatchers started
2020-03-04 01:10:55.963 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:10:55.964 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:10:55.966 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:10:55.968 +03:30 [INF] Hosting environment: Development
2020-03-04 01:10:55.970 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:10:56.295 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:10:57.173 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:10:57.214 +03:30 [INF] Request finished in 39.781200000000005ms 404 
2020-03-04 01:10:57.318 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:10:57.326 +03:30 [INF] Request finished in 8.0693ms 0 
2020-03-04 01:10:58.440 +03:30 [INF] Successfully validated the token.
2020-03-04 01:10:58.449 +03:30 [INF] Authorization was successful.
2020-03-04 01:10:58.452 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 01:10:58.482 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 01:10:58.736 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-04 01:11:09.982 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 01:11:11.507 +03:30 [INF] Executed DbCommand (106ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 01:11:14.921 +03:30 [INF] Executed action method SellAPI.Controllers.ProductController.GetAll (SellAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 15998.595800000001ms.
2020-03-04 01:11:14.932 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 01:11:18.605 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 20112.195600000003ms
2020-03-04 01:11:18.608 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 01:11:18.622 +03:30 [INF] Request finished in 22347.1014ms 200 application/json; charset=utf-8
2020-03-04 01:11:37.046 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:11:37.473 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:11:37.529 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:11:37.553 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:11:37.555 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:11:37.556 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:11:37.656 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:11:37.665 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:11:37.666 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:11:37.959 +03:30 [INF] Server desktop-al52q8t:18884:05ea523d successfully announced in 368/3124 ms
2020-03-04 01:11:37.959 +03:30 [INF] Server desktop-al52q8t:18884:a4f80483 successfully announced in 283/3142 ms
2020-03-04 01:11:37.979 +03:30 [INF] Server desktop-al52q8t:18884:05ea523d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:11:37.979 +03:30 [INF] Server desktop-al52q8t:18884:a4f80483 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:11:38.510 +03:30 [INF] Server desktop-al52q8t:18884:05ea523d all the dispatchers started
2020-03-04 01:11:38.540 +03:30 [INF] Server desktop-al52q8t:18884:a4f80483 all the dispatchers started
2020-03-04 01:11:39.962 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:11:39.964 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:11:39.966 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:11:39.967 +03:30 [INF] Hosting environment: Development
2020-03-04 01:11:39.970 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:11:41.926 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:11:42.192 +03:30 [INF] Request finished in 266.1327ms 404 
2020-03-04 01:11:42.232 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:11:42.235 +03:30 [INF] Request finished in 3.2945ms 0 
2020-03-04 01:13:02.308 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:13:03.388 +03:30 [INF] Successfully validated the token.
2020-03-04 01:13:03.408 +03:30 [INF] Authorization was successful.
2020-03-04 01:13:03.412 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 01:13:03.476 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 01:13:03.585 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-04 01:13:08.520 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 01:13:09.687 +03:30 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 01:13:13.227 +03:30 [INF] Executed action method SellAPI.Controllers.ProductController.GetAll (SellAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 9051.9786ms.
2020-03-04 01:13:13.239 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 01:13:13.282 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 9796.4014ms
2020-03-04 01:13:13.286 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 01:13:13.297 +03:30 [INF] Request finished in 10988.8374ms 200 application/json; charset=utf-8
2020-03-04 01:13:18.905 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:13:19.299 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:13:19.356 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:13:19.380 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:13:19.383 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:13:19.385 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:13:19.478 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:13:19.480 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:13:19.481 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:13:19.755 +03:30 [INF] Server desktop-al52q8t:4888:7ffe3a11 successfully announced in 344/75800000000004 ms
2020-03-04 01:13:19.755 +03:30 [INF] Server desktop-al52q8t:4888:52a8af21 successfully announced in 253/54090000000002 ms
2020-03-04 01:13:19.776 +03:30 [INF] Server desktop-al52q8t:4888:7ffe3a11 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:13:19.776 +03:30 [INF] Server desktop-al52q8t:4888:52a8af21 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:13:20.289 +03:30 [INF] Server desktop-al52q8t:4888:52a8af21 all the dispatchers started
2020-03-04 01:13:20.332 +03:30 [INF] Server desktop-al52q8t:4888:7ffe3a11 all the dispatchers started
2020-03-04 01:13:21.890 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:13:21.891 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:13:21.893 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:13:21.894 +03:30 [INF] Hosting environment: Development
2020-03-04 01:13:21.896 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:13:23.145 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:13:23.314 +03:30 [INF] Request finished in 171.40810000000002ms 404 
2020-03-04 01:13:23.399 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:13:23.402 +03:30 [INF] Request finished in 2.6905ms 0 
2020-03-04 01:16:10.876 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:16:11.880 +03:30 [INF] Successfully validated the token.
2020-03-04 01:16:11.892 +03:30 [INF] Authorization was successful.
2020-03-04 01:16:11.894 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 01:16:11.923 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 01:16:12.000 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-04 01:16:17.897 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 01:16:19.458 +03:30 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 01:16:25.474 +03:30 [INF] Executed action method SellAPI.Controllers.ProductController.GetAll (SellAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 13177.3881ms.
2020-03-04 01:16:25.485 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 01:16:25.524 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 13593.5516ms
2020-03-04 01:16:25.527 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 01:16:25.537 +03:30 [INF] Request finished in 14660.8289ms 200 application/json; charset=utf-8
2020-03-04 01:16:37.422 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:16:38.137 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:16:38.213 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:16:38.241 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:16:38.243 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:16:38.244 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:16:38.361 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:16:38.362 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:16:38.364 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:16:38.653 +03:30 [INF] Server desktop-al52q8t:8436:7bb40cfe successfully announced in 383/3312 ms
2020-03-04 01:16:38.653 +03:30 [INF] Server desktop-al52q8t:8436:868f7ade successfully announced in 280/35290000000003 ms
2020-03-04 01:16:38.673 +03:30 [INF] Server desktop-al52q8t:8436:868f7ade is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:16:38.673 +03:30 [INF] Server desktop-al52q8t:8436:7bb40cfe is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:16:38.759 +03:30 [INF] 4 servers were removed due to timeout
2020-03-04 01:16:39.264 +03:30 [INF] Server desktop-al52q8t:8436:7bb40cfe all the dispatchers started
2020-03-04 01:16:39.264 +03:30 [INF] Server desktop-al52q8t:8436:868f7ade all the dispatchers started
2020-03-04 01:16:40.770 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:16:40.771 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:16:40.773 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:16:40.774 +03:30 [INF] Hosting environment: Development
2020-03-04 01:16:40.776 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:16:41.996 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:16:42.140 +03:30 [INF] Request finished in 145.1342ms 404 
2020-03-04 01:16:42.189 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:16:42.192 +03:30 [INF] Request finished in 2.3639ms 0 
2020-03-04 01:17:00.703 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:17:01.730 +03:30 [INF] Successfully validated the token.
2020-03-04 01:17:01.740 +03:30 [INF] Authorization failed.
2020-03-04 01:17:01.743 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:17:01.782 +03:30 [INF] Request finished in 1078.838ms 403 
2020-03-04 01:17:03.083 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:17:03.089 +03:30 [INF] Successfully validated the token.
2020-03-04 01:17:03.091 +03:30 [INF] Authorization failed.
2020-03-04 01:17:03.094 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:17:03.096 +03:30 [INF] Request finished in 12.6243ms 403 
2020-03-04 01:17:34.474 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:17:34.889 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:17:34.945 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:17:34.968 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:17:34.970 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:17:34.971 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:17:35.080 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:17:35.090 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:17:35.090 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:17:35.343 +03:30 [INF] Server desktop-al52q8t:13416:986a0a2a successfully announced in 242/49730000000002 ms
2020-03-04 01:17:35.343 +03:30 [INF] Server desktop-al52q8t:13416:7841ed9f successfully announced in 345/0946 ms
2020-03-04 01:17:35.358 +03:30 [INF] Server desktop-al52q8t:13416:7841ed9f is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:17:35.358 +03:30 [INF] Server desktop-al52q8t:13416:986a0a2a is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:17:35.765 +03:30 [INF] Server desktop-al52q8t:13416:7841ed9f all the dispatchers started
2020-03-04 01:17:35.916 +03:30 [INF] Server desktop-al52q8t:13416:986a0a2a all the dispatchers started
2020-03-04 01:17:37.465 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:17:37.466 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:17:37.467 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:17:37.469 +03:30 [INF] Hosting environment: Development
2020-03-04 01:17:37.470 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:17:39.275 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:17:39.892 +03:30 [INF] Request finished in 616.8129ms 404 
2020-03-04 01:17:40.014 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:17:40.018 +03:30 [INF] Request finished in 3.5651ms 0 
2020-03-04 01:17:42.492 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/find/2  
2020-03-04 01:17:42.519 +03:30 [INF] Authorization failed.
2020-03-04 01:17:42.526 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 01:17:42.551 +03:30 [INF] Request finished in 48.939600000000006ms 401 
2020-03-04 01:18:02.805 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:18:03.923 +03:30 [INF] Successfully validated the token.
2020-03-04 01:18:03.974 +03:30 [INF] Authorization was successful.
2020-03-04 01:18:03.976 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 01:18:04.033 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 01:18:04.246 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-04 01:18:06.181 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 01:18:08.008 +03:30 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 01:18:08.199 +03:30 [INF] Executed action method SellAPI.Controllers.ProductController.GetAll (SellAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3941.655ms.
2020-03-04 01:18:08.208 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 01:18:08.236 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 4194.0379ms
2020-03-04 01:18:08.240 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 01:18:08.274 +03:30 [INF] Request finished in 5468.4987ms 200 application/json; charset=utf-8
2020-03-04 01:18:15.523 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:18:16.146 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:18:16.209 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:18:16.251 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:18:16.253 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:18:16.255 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:18:16.486 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:18:16.489 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:18:16.490 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:18:16.791 +03:30 [INF] Server desktop-al52q8t:23188:51cba6ed successfully announced in 286/252 ms
2020-03-04 01:18:16.792 +03:30 [INF] Server desktop-al52q8t:23188:b9b95d63 successfully announced in 504/285 ms
2020-03-04 01:18:16.811 +03:30 [INF] Server desktop-al52q8t:23188:51cba6ed is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:18:16.811 +03:30 [INF] Server desktop-al52q8t:23188:b9b95d63 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:18:16.893 +03:30 [INF] 2 servers were removed due to timeout
2020-03-04 01:18:17.408 +03:30 [INF] Server desktop-al52q8t:23188:51cba6ed all the dispatchers started
2020-03-04 01:18:17.469 +03:30 [INF] Server desktop-al52q8t:23188:b9b95d63 all the dispatchers started
2020-03-04 01:18:18.874 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:18:18.877 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:18:18.879 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:18:18.883 +03:30 [INF] Hosting environment: Development
2020-03-04 01:18:18.887 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:18:20.063 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:18:20.219 +03:30 [INF] Request finished in 155.2846ms 404 
2020-03-04 01:18:20.264 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:18:20.267 +03:30 [INF] Request finished in 2.3936ms 0 
2020-03-04 01:18:33.033 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:18:34.244 +03:30 [INF] Successfully validated the token.
2020-03-04 01:18:34.800 +03:30 [INF] Authorization failed.
2020-03-04 01:18:34.805 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:18:35.114 +03:30 [INF] Request finished in 2081.4723ms 403 
2020-03-04 01:18:53.205 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:18:53.210 +03:30 [INF] Successfully validated the token.
2020-03-04 01:18:53.213 +03:30 [INF] Authorization failed.
2020-03-04 01:18:53.215 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:18:53.218 +03:30 [INF] Request finished in 13.2356ms 403 
2020-03-04 01:20:33.418 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:20:33.854 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:20:33.910 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:20:33.935 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:20:33.937 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:20:33.938 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:20:34.026 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:20:34.034 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:20:34.041 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:20:34.314 +03:30 [INF] Server desktop-al52q8t:11916:6c691643 successfully announced in 263/2104 ms
2020-03-04 01:20:34.314 +03:30 [INF] Server desktop-al52q8t:11916:850a862c successfully announced in 352/1812 ms
2020-03-04 01:20:34.334 +03:30 [INF] Server desktop-al52q8t:11916:6c691643 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:20:34.334 +03:30 [INF] Server desktop-al52q8t:11916:850a862c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:20:34.741 +03:30 [INF] Server desktop-al52q8t:11916:6c691643 all the dispatchers started
2020-03-04 01:20:35.177 +03:30 [INF] Server desktop-al52q8t:11916:850a862c all the dispatchers started
2020-03-04 01:20:36.438 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:20:36.439 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:20:36.440 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:20:36.442 +03:30 [INF] Hosting environment: Development
2020-03-04 01:20:36.444 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:20:36.721 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:20:37.893 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:20:37.926 +03:30 [INF] Request finished in 33.0732ms 404 
2020-03-04 01:20:38.035 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:20:38.048 +03:30 [INF] Request finished in 12.6072ms 0 
2020-03-04 01:20:38.827 +03:30 [INF] Successfully validated the token.
2020-03-04 01:20:38.836 +03:30 [INF] Authorization was successful.
2020-03-04 01:20:38.839 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 01:20:38.879 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 01:20:38.975 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-04 01:20:46.005 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 01:20:47.143 +03:30 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 01:20:47.190 +03:30 [INF] Executed action method SellAPI.Controllers.ProductController.GetAll (SellAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 8205.3611ms.
2020-03-04 01:20:47.204 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 01:20:47.243 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 8340.9071ms
2020-03-04 01:20:47.247 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 01:20:47.256 +03:30 [INF] Request finished in 10536.810500000001ms 200 application/json; charset=utf-8
2020-03-04 01:20:50.429 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:20:50.445 +03:30 [INF] Authorization failed.
2020-03-04 01:20:50.451 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 01:20:50.466 +03:30 [INF] Request finished in 37.6239ms 401 
2020-03-04 01:21:00.233 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/find/2?access_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImFVd1E4TkJDUUJNajhTWlN3VERZNmciLCJ0eXAiOiJhdCtqd3QifQ.eyJuYmYiOjE1ODMyNzIxMjMsImV4cCI6MTU4MzI3NTcyMywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NjAwMSIsImF1ZCI6IlNlbGxBUEkiLCJjbGllbnRfaWQiOiJNb2JpbGVDbGllbnQiLCJzdWIiOiIzNWQ5NzZmNC02MWIwLTQyNTAtODUzNy0xY2E2NDJkYjI5ODEiLCJhdXRoX3RpbWUiOjE1ODMyNzIxMjMsImlkcCI6ImxvY2FsIiwibmFtZSI6ImFsaWhmIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsIlNlbGxBUEkiXSwiYW1yIjpbInB3ZCJdfQ.A5O2U_I-5LoPDtYlf0frIMnFZg5Sn87u6l3DL1TlW6ZXE-d_Hkw1D4BXdK2c8YmoRLwz5Z07w2Czb47WIziXSKEefAXvev4_PNMhm5oc6_no5vVms3_0sLEPj5L8RvP16bqwiMm3lBnt9ziGT5LG0aPqh1leYbcTJMO7tjJCpVk71IH3F_zz2AdFz2DYsP4V3RoeYPXjUUz3zqbe-aM92Nz96Iw9W1C3vF09tUJLmThZLV73TkfLZ_dBykevyfuv01qGDQyc9N3RYEwiw9uMenb6Qhaq2kx4EsI4TT_Qa0X8-eAhsiRf5_2fbvhubgD-xso4TldsmVnec464Z5qm7w  
2020-03-04 01:21:00.251 +03:30 [INF] Authorization failed.
2020-03-04 01:21:00.265 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 01:21:00.268 +03:30 [INF] Request finished in 34.906600000000005ms 401 
2020-03-04 01:21:02.346 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/find/2?access_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImFVd1E4TkJDUUJNajhTWlN3VERZNmciLCJ0eXAiOiJhdCtqd3QifQ.eyJuYmYiOjE1ODMyNzIxMjMsImV4cCI6MTU4MzI3NTcyMywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NjAwMSIsImF1ZCI6IlNlbGxBUEkiLCJjbGllbnRfaWQiOiJNb2JpbGVDbGllbnQiLCJzdWIiOiIzNWQ5NzZmNC02MWIwLTQyNTAtODUzNy0xY2E2NDJkYjI5ODEiLCJhdXRoX3RpbWUiOjE1ODMyNzIxMjMsImlkcCI6ImxvY2FsIiwibmFtZSI6ImFsaWhmIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsIlNlbGxBUEkiXSwiYW1yIjpbInB3ZCJdfQ.A5O2U_I-5LoPDtYlf0frIMnFZg5Sn87u6l3DL1TlW6ZXE-d_Hkw1D4BXdK2c8YmoRLwz5Z07w2Czb47WIziXSKEefAXvev4_PNMhm5oc6_no5vVms3_0sLEPj5L8RvP16bqwiMm3lBnt9ziGT5LG0aPqh1leYbcTJMO7tjJCpVk71IH3F_zz2AdFz2DYsP4V3RoeYPXjUUz3zqbe-aM92Nz96Iw9W1C3vF09tUJLmThZLV73TkfLZ_dBykevyfuv01qGDQyc9N3RYEwiw9uMenb6Qhaq2kx4EsI4TT_Qa0X8-eAhsiRf5_2fbvhubgD-xso4TldsmVnec464Z5qm7w  
2020-03-04 01:21:02.361 +03:30 [INF] Authorization failed.
2020-03-04 01:21:02.364 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 01:21:02.374 +03:30 [INF] Request finished in 39.2886ms 401 
2020-03-04 01:21:20.595 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/find/2  
2020-03-04 01:21:20.632 +03:30 [INF] Authorization failed.
2020-03-04 01:21:20.634 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 01:21:20.636 +03:30 [INF] Request finished in 41.2633ms 401 
2020-03-04 01:21:22.549 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/find/2  
2020-03-04 01:21:22.551 +03:30 [INF] Successfully validated the token.
2020-03-04 01:21:22.554 +03:30 [INF] Authorization failed.
2020-03-04 01:21:22.557 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:21:22.560 +03:30 [INF] Request finished in 11.0893ms 403 
2020-03-04 01:25:35.699 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:25:36.477 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:25:36.581 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:25:36.624 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:25:36.625 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:25:36.626 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:25:36.810 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:25:36.812 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:25:36.812 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:25:37.097 +03:30 [INF] Server desktop-al52q8t:3828:e3a440b4 successfully announced in 442/56 ms
2020-03-04 01:25:37.097 +03:30 [INF] Server desktop-al52q8t:3828:e8e95ea3 successfully announced in 275/1286 ms
2020-03-04 01:25:37.114 +03:30 [INF] Server desktop-al52q8t:3828:e8e95ea3 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:25:37.114 +03:30 [INF] Server desktop-al52q8t:3828:e3a440b4 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:25:37.192 +03:30 [INF] 8 servers were removed due to timeout
2020-03-04 01:25:37.585 +03:30 [INF] Server desktop-al52q8t:3828:e8e95ea3 all the dispatchers started
2020-03-04 01:25:37.789 +03:30 [INF] Server desktop-al52q8t:3828:e3a440b4 all the dispatchers started
2020-03-04 01:25:39.385 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:25:39.386 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:25:39.388 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:25:39.389 +03:30 [INF] Hosting environment: Development
2020-03-04 01:25:39.390 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:25:41.377 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:25:41.552 +03:30 [INF] Request finished in 176.2136ms 404 
2020-03-04 01:25:41.605 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:25:41.622 +03:30 [INF] Request finished in 16.4009ms 0 
2020-03-04 01:26:24.108 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:26:25.185 +03:30 [INF] Successfully validated the token.
2020-03-04 01:26:25.195 +03:30 [INF] Authorization failed.
2020-03-04 01:26:25.198 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:26:25.213 +03:30 [INF] Request finished in 1106.0158000000001ms 403 
2020-03-04 01:26:31.521 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:26:31.537 +03:30 [INF] Successfully validated the token.
2020-03-04 01:26:31.540 +03:30 [INF] Authorization failed.
2020-03-04 01:26:31.542 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:26:31.545 +03:30 [INF] Request finished in 33.6548ms 403 
2020-03-04 01:26:32.499 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:26:32.526 +03:30 [INF] Successfully validated the token.
2020-03-04 01:26:32.549 +03:30 [INF] Authorization failed.
2020-03-04 01:26:32.551 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:26:32.556 +03:30 [INF] Request finished in 57.4078ms 403 
2020-03-04 01:26:33.432 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:26:33.458 +03:30 [INF] Successfully validated the token.
2020-03-04 01:26:33.459 +03:30 [INF] Authorization failed.
2020-03-04 01:26:33.473 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:26:33.474 +03:30 [INF] Request finished in 42.2346ms 403 
2020-03-04 01:26:40.152 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/?access_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImFVd1E4TkJDUUJNajhTWlN3VERZNmciLCJ0eXAiOiJhdCtqd3QifQ.eyJuYmYiOjE1ODMyNzIxMjMsImV4cCI6MTU4MzI3NTcyMywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NjAwMSIsImF1ZCI6IlNlbGxBUEkiLCJjbGllbnRfaWQiOiJNb2JpbGVDbGllbnQiLCJzdWIiOiIzNWQ5NzZmNC02MWIwLTQyNTAtODUzNy0xY2E2NDJkYjI5ODEiLCJhdXRoX3RpbWUiOjE1ODMyNzIxMjMsImlkcCI6ImxvY2FsIiwibmFtZSI6ImFsaWhmIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsIlNlbGxBUEkiXSwiYW1yIjpbInB3ZCJdfQ.A5O2U_I-5LoPDtYlf0frIMnFZg5Sn87u6l3DL1TlW6ZXE-d_Hkw1D4BXdK2c8YmoRLwz5Z07w2Czb47WIziXSKEefAXvev4_PNMhm5oc6_no5vVms3_0sLEPj5L8RvP16bqwiMm3lBnt9ziGT5LG0aPqh1leYbcTJMO7tjJCpVk71IH3F_zz2AdFz2DYsP4V3RoeYPXjUUz3zqbe-aM92Nz96Iw9W1C3vF09tUJLmThZLV73TkfLZ_dBykevyfuv01qGDQyc9N3RYEwiw9uMenb6Qhaq2kx4EsI4TT_Qa0X8-eAhsiRf5_2fbvhubgD-xso4TldsmVnec464Z5qm7w  
2020-03-04 01:26:40.157 +03:30 [INF] Authorization failed.
2020-03-04 01:26:40.166 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 01:26:40.168 +03:30 [INF] Request finished in 15.8864ms 401 
2020-03-04 01:26:54.785 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:26:54.788 +03:30 [INF] Successfully validated the token.
2020-03-04 01:26:54.790 +03:30 [INF] Authorization failed.
2020-03-04 01:26:54.792 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:26:54.793 +03:30 [INF] Request finished in 7.7397ms 403 
2020-03-04 01:34:42.696 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:34:43.529 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:34:43.610 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:34:43.650 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:34:43.652 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:34:43.653 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:34:43.824 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:34:43.825 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:34:43.826 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:34:44.097 +03:30 [INF] Server desktop-al52q8t:16904:774c3683 successfully announced in 258/3258 ms
2020-03-04 01:34:44.097 +03:30 [INF] Server desktop-al52q8t:16904:2d1ea949 successfully announced in 419/0127 ms
2020-03-04 01:34:44.117 +03:30 [INF] Server desktop-al52q8t:16904:2d1ea949 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:34:44.117 +03:30 [INF] Server desktop-al52q8t:16904:774c3683 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:34:44.210 +03:30 [INF] 4 servers were removed due to timeout
2020-03-04 01:34:44.651 +03:30 [INF] Server desktop-al52q8t:16904:774c3683 all the dispatchers started
2020-03-04 01:34:44.657 +03:30 [INF] Server desktop-al52q8t:16904:2d1ea949 all the dispatchers started
2020-03-04 01:34:46.413 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:34:46.415 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:34:46.416 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:34:46.417 +03:30 [INF] Hosting environment: Development
2020-03-04 01:34:46.419 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:34:48.056 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:34:48.271 +03:30 [INF] Request finished in 215.2648ms 404 
2020-03-04 01:34:48.325 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:34:48.332 +03:30 [INF] Request finished in 6.6677ms 0 
2020-03-04 01:34:51.178 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:34:52.469 +03:30 [INF] Successfully validated the token.
2020-03-04 01:34:52.478 +03:30 [INF] Authorization failed.
2020-03-04 01:34:52.481 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:34:52.494 +03:30 [INF] Request finished in 1316.7489ms 403 
2020-03-04 01:36:22.248 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:36:22.254 +03:30 [INF] Successfully validated the token.
2020-03-04 01:36:22.256 +03:30 [INF] Authorization failed.
2020-03-04 01:36:22.257 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:36:22.259 +03:30 [INF] Request finished in 11.3297ms 403 
2020-03-04 01:37:12.675 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:37:12.680 +03:30 [INF] Successfully validated the token.
2020-03-04 01:37:12.682 +03:30 [INF] Authorization failed.
2020-03-04 01:37:12.685 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:37:12.687 +03:30 [INF] Request finished in 13.1233ms 403 
2020-03-04 01:37:15.488 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:37:15.493 +03:30 [INF] Successfully validated the token.
2020-03-04 01:37:15.496 +03:30 [INF] Authorization failed.
2020-03-04 01:37:15.498 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:37:15.501 +03:30 [INF] Request finished in 13.312000000000001ms 403 
2020-03-04 01:37:16.489 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:37:16.493 +03:30 [INF] Successfully validated the token.
2020-03-04 01:37:16.495 +03:30 [INF] Authorization failed.
2020-03-04 01:37:16.497 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:37:16.499 +03:30 [INF] Request finished in 21.765900000000002ms 403 
2020-03-04 01:37:47.356 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:37:47.491 +03:30 [INF] Successfully validated the token.
2020-03-04 01:37:47.494 +03:30 [INF] Authorization failed.
2020-03-04 01:37:47.495 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:37:47.497 +03:30 [INF] Request finished in 152.77700000000002ms 403 
2020-03-04 01:37:50.928 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:37:50.944 +03:30 [INF] Successfully validated the token.
2020-03-04 01:37:50.946 +03:30 [INF] Authorization failed.
2020-03-04 01:37:50.947 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:37:50.949 +03:30 [INF] Request finished in 21.0009ms 403 
2020-03-04 01:38:23.108 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:38:23.474 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:38:23.530 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:38:23.553 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:38:23.554 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:38:23.556 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:38:23.724 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:38:23.725 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:38:23.733 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:38:23.967 +03:30 [INF] Server desktop-al52q8t:10852:eb1aaf63 successfully announced in 371/67760000000004 ms
2020-03-04 01:38:23.967 +03:30 [INF] Server desktop-al52q8t:10852:50b92c60 successfully announced in 220/174 ms
2020-03-04 01:38:23.984 +03:30 [INF] Server desktop-al52q8t:10852:50b92c60 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:38:23.984 +03:30 [INF] Server desktop-al52q8t:10852:eb1aaf63 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:38:24.624 +03:30 [INF] Server desktop-al52q8t:10852:eb1aaf63 all the dispatchers started
2020-03-04 01:38:24.752 +03:30 [INF] Server desktop-al52q8t:10852:50b92c60 all the dispatchers started
2020-03-04 01:38:25.990 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:38:25.992 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:38:25.994 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:38:25.996 +03:30 [INF] Hosting environment: Development
2020-03-04 01:38:25.997 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:38:27.353 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:38:27.540 +03:30 [INF] Request finished in 187.1422ms 404 
2020-03-04 01:38:27.581 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:38:27.584 +03:30 [INF] Request finished in 2.3925ms 0 
2020-03-04 01:39:14.061 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:39:14.771 +03:30 [INF] Successfully validated the token.
2020-03-04 01:39:14.866 +03:30 [INF] Authorization failed.
2020-03-04 01:39:14.869 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:39:14.882 +03:30 [INF] Request finished in 820.4129ms 403 
2020-03-04 01:39:16.391 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:39:16.396 +03:30 [INF] Successfully validated the token.
2020-03-04 01:39:16.398 +03:30 [INF] Authorization failed.
2020-03-04 01:39:16.399 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:39:16.400 +03:30 [INF] Request finished in 9.768500000000001ms 403 
2020-03-04 01:39:17.823 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:39:17.834 +03:30 [INF] Successfully validated the token.
2020-03-04 01:39:17.851 +03:30 [INF] Authorization failed.
2020-03-04 01:39:17.853 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:39:17.856 +03:30 [INF] Request finished in 33.4989ms 403 
2020-03-04 01:41:59.625 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:41:59.629 +03:30 [INF] Successfully validated the token.
2020-03-04 01:41:59.631 +03:30 [INF] Authorization failed.
2020-03-04 01:41:59.633 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:41:59.635 +03:30 [INF] Request finished in 10.3489ms 403 
2020-03-04 01:42:00.511 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 01:42:00.618 +03:30 [INF] Successfully validated the token.
2020-03-04 01:42:00.620 +03:30 [INF] Authorization failed.
2020-03-04 01:42:00.621 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:42:00.622 +03:30 [INF] Request finished in 113.2009ms 403 
2020-03-04 01:43:24.064 +03:30 [INF] 2 servers were removed due to timeout
2020-03-04 01:43:52.669 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:43:53.044 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:43:53.098 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:43:53.127 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:43:53.129 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:43:53.129 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:43:53.244 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:43:53.246 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:43:53.247 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:43:53.486 +03:30 [INF] Server desktop-al52q8t:15404:c1d48e86 successfully announced in 230/6609 ms
2020-03-04 01:43:53.486 +03:30 [INF] Server desktop-al52q8t:15404:dd1cd13f successfully announced in 332/0647 ms
2020-03-04 01:43:53.503 +03:30 [INF] Server desktop-al52q8t:15404:dd1cd13f is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:43:53.503 +03:30 [INF] Server desktop-al52q8t:15404:c1d48e86 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:43:54.020 +03:30 [INF] Server desktop-al52q8t:15404:dd1cd13f all the dispatchers started
2020-03-04 01:43:54.067 +03:30 [INF] Server desktop-al52q8t:15404:c1d48e86 all the dispatchers started
2020-03-04 01:43:55.521 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:43:55.523 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:43:55.526 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:43:55.527 +03:30 [INF] Hosting environment: Development
2020-03-04 01:43:55.529 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:43:56.867 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:43:57.027 +03:30 [INF] Request finished in 159.9636ms 404 
2020-03-04 01:43:57.077 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:43:57.079 +03:30 [INF] Request finished in 1.79ms 0 
2020-03-04 01:44:01.828 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-04 01:44:01.842 +03:30 [INF] Authorization failed.
2020-03-04 01:44:01.849 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 01:44:01.862 +03:30 [INF] Request finished in 34.9446ms 401 
2020-03-04 01:44:31.465 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-04 01:44:32.497 +03:30 [INF] Successfully validated the token.
2020-03-04 01:44:32.501 +03:30 [INF] Authorization was successful.
2020-03-04 01:44:32.502 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-04 01:44:32.530 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-04 01:44:32.722 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-04 01:44:34.138 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 01:44:35.444 +03:30 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[ID], [c].[Name], [c].[Description], [c].[CreateOn], [c].[UpdateOn]
FROM [Category] AS [c]
2020-03-04 01:44:35.499 +03:30 [INF] Executed action method SellAPI.Controllers.CategoryController.GetAll (SellAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2729.25ms.
2020-03-04 01:44:35.510 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Category.CategoryItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 01:44:35.533 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 2994.0868ms
2020-03-04 01:44:35.536 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-04 01:44:35.546 +03:30 [INF] Request finished in 4081.2759ms 200 application/json; charset=utf-8
2020-03-04 01:44:56.578 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 01:44:56.952 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 01:44:57.013 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 01:44:57.043 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:44:57.045 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:44:57.047 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 01:44:57.166 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 01:44:57.168 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 01:44:57.169 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 01:44:57.427 +03:30 [INF] Server desktop-al52q8t:16252:56a68f71 successfully announced in 346/53380000000004 ms
2020-03-04 01:44:57.427 +03:30 [INF] Server desktop-al52q8t:16252:a6668e30 successfully announced in 248/2262 ms
2020-03-04 01:44:57.445 +03:30 [INF] Server desktop-al52q8t:16252:56a68f71 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:44:57.445 +03:30 [INF] Server desktop-al52q8t:16252:a6668e30 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 01:44:57.978 +03:30 [INF] Server desktop-al52q8t:16252:56a68f71 all the dispatchers started
2020-03-04 01:44:58.000 +03:30 [INF] Server desktop-al52q8t:16252:a6668e30 all the dispatchers started
2020-03-04 01:44:59.397 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 01:44:59.398 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 01:44:59.400 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 01:44:59.402 +03:30 [INF] Hosting environment: Development
2020-03-04 01:44:59.404 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 01:45:00.507 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 01:45:00.659 +03:30 [INF] Request finished in 153.8802ms 404 
2020-03-04 01:45:00.721 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 01:45:00.723 +03:30 [INF] Request finished in 2.2934ms 0 
2020-03-04 01:45:22.258 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-04 01:45:23.302 +03:30 [INF] Successfully validated the token.
2020-03-04 01:45:23.310 +03:30 [INF] Authorization failed.
2020-03-04 01:45:23.314 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:45:23.329 +03:30 [INF] Request finished in 1071.0479ms 403 
2020-03-04 01:45:48.079 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-04 01:45:48.084 +03:30 [INF] Successfully validated the token.
2020-03-04 01:45:48.086 +03:30 [INF] Authorization failed.
2020-03-04 01:45:48.088 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 01:45:48.089 +03:30 [INF] Request finished in 27.0636ms 403 
2020-03-04 02:03:57.236 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 02:03:57.631 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 02:03:57.683 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 02:03:57.708 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:03:57.710 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:03:57.712 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 02:03:57.833 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:03:57.833 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:03:57.834 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 02:03:58.071 +03:30 [INF] Server desktop-al52q8t:14420:6ec46160 successfully announced in 227/7773 ms
2020-03-04 02:03:58.071 +03:30 [INF] Server desktop-al52q8t:14420:8d620644 successfully announced in 333/8111 ms
2020-03-04 02:03:58.085 +03:30 [INF] Server desktop-al52q8t:14420:8d620644 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:03:58.085 +03:30 [INF] Server desktop-al52q8t:14420:6ec46160 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:03:58.162 +03:30 [INF] 6 servers were removed due to timeout
2020-03-04 02:03:58.585 +03:30 [INF] Server desktop-al52q8t:14420:6ec46160 all the dispatchers started
2020-03-04 02:03:58.638 +03:30 [INF] Server desktop-al52q8t:14420:8d620644 all the dispatchers started
2020-03-04 02:04:00.027 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 02:04:00.028 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 02:04:00.031 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 02:04:00.032 +03:30 [INF] Hosting environment: Development
2020-03-04 02:04:00.033 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 02:04:01.378 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 02:04:02.149 +03:30 [INF] Request finished in 772.7298000000001ms 404 
2020-03-04 02:04:02.257 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 02:04:02.259 +03:30 [INF] Request finished in 2.4519ms 0 
2020-03-04 02:04:03.002 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-04 02:04:03.027 +03:30 [INF] Authorization failed.
2020-03-04 02:04:03.033 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 02:04:03.043 +03:30 [INF] Request finished in 40.914300000000004ms 401 
2020-03-04 02:05:22.975 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-04 02:05:24.040 +03:30 [INF] Successfully validated the token.
2020-03-04 02:05:24.044 +03:30 [INF] Authorization failed.
2020-03-04 02:05:24.048 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 02:05:24.053 +03:30 [INF] Request finished in 1077.2625ms 403 
2020-03-04 02:05:27.404 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-04 02:05:27.410 +03:30 [INF] Successfully validated the token.
2020-03-04 02:05:27.413 +03:30 [INF] Authorization failed.
2020-03-04 02:05:27.415 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 02:05:27.417 +03:30 [INF] Request finished in 13.4482ms 403 
2020-03-04 02:05:28.363 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-04 02:05:28.368 +03:30 [INF] Successfully validated the token.
2020-03-04 02:05:28.371 +03:30 [INF] Authorization failed.
2020-03-04 02:05:28.373 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 02:05:28.376 +03:30 [INF] Request finished in 13.081900000000001ms 403 
2020-03-04 02:05:29.123 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-04 02:05:29.141 +03:30 [INF] Successfully validated the token.
2020-03-04 02:05:29.143 +03:30 [INF] Authorization failed.
2020-03-04 02:05:29.145 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 02:05:29.150 +03:30 [INF] Request finished in 39.5396ms 403 
2020-03-04 02:06:03.443 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-04 02:06:03.446 +03:30 [INF] Successfully validated the token.
2020-03-04 02:06:03.448 +03:30 [INF] Authorization failed.
2020-03-04 02:06:03.449 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 02:06:03.451 +03:30 [INF] Request finished in 8.1978ms 403 
2020-03-04 02:08:03.367 +03:30 [INF] Server desktop-al52q8t:14420:6ec46160 caught stopping signal...
2020-03-04 02:08:03.370 +03:30 [INF] Application is shutting down...
2020-03-04 02:08:03.370 +03:30 [INF] Server desktop-al52q8t:14420:6ec46160 caught stopped signal...
2020-03-04 02:08:03.476 +03:30 [INF] Server desktop-al52q8t:14420:8d620644 caught stopping signal...
2020-03-04 02:08:03.479 +03:30 [INF] Server desktop-al52q8t:14420:8d620644 caught stopped signal...
2020-03-04 02:08:04.357 +03:30 [INF] Server desktop-al52q8t:14420:6ec46160 All dispatchers stopped
2020-03-04 02:08:04.379 +03:30 [INF] Server desktop-al52q8t:14420:6ec46160 successfully reported itself as stopped in 18/4129 ms
2020-03-04 02:08:04.381 +03:30 [INF] Server desktop-al52q8t:14420:6ec46160 has been stopped in total 1010/7940000000001 ms
2020-03-04 02:08:04.871 +03:30 [INF] Server desktop-al52q8t:14420:8d620644 All dispatchers stopped
2020-03-04 02:08:04.894 +03:30 [INF] Server desktop-al52q8t:14420:8d620644 successfully reported itself as stopped in 20/4093 ms
2020-03-04 02:08:04.896 +03:30 [INF] Server desktop-al52q8t:14420:8d620644 has been stopped in total 1417/9633000000001 ms
2020-03-04 02:10:37.762 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 02:10:38.133 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 02:10:38.191 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 02:10:38.222 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:10:38.225 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:10:38.226 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 02:10:38.351 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:10:38.353 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:10:38.354 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 02:10:38.609 +03:30 [INF] Server desktop-al52q8t:16740:7acc8ec2 successfully announced in 244/339 ms
2020-03-04 02:10:38.609 +03:30 [INF] Server desktop-al52q8t:16740:7629bd95 successfully announced in 356/5371 ms
2020-03-04 02:10:38.625 +03:30 [INF] Server desktop-al52q8t:16740:7629bd95 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:10:38.625 +03:30 [INF] Server desktop-al52q8t:16740:7acc8ec2 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:10:39.109 +03:30 [INF] Server desktop-al52q8t:16740:7629bd95 all the dispatchers started
2020-03-04 02:10:39.162 +03:30 [INF] Server desktop-al52q8t:16740:7acc8ec2 all the dispatchers started
2020-03-04 02:10:40.651 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 02:10:40.652 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 02:10:40.654 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 02:10:40.656 +03:30 [INF] Hosting environment: Development
2020-03-04 02:10:40.670 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 02:10:41.824 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 02:10:41.970 +03:30 [INF] Request finished in 146.7218ms 404 
2020-03-04 02:10:42.065 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 02:10:42.078 +03:30 [INF] Request finished in 13.143500000000001ms 0 
2020-03-04 02:10:47.415 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-04 02:10:48.529 +03:30 [INF] Successfully validated the token.
2020-03-04 02:10:48.538 +03:30 [INF] Authorization failed.
2020-03-04 02:10:48.541 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 02:10:48.598 +03:30 [INF] Request finished in 1165.2931ms 403 
2020-03-04 02:12:12.716 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 02:12:13.129 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 02:12:13.183 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 02:12:13.213 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:12:13.215 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:12:13.216 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 02:12:13.322 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:12:13.325 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:12:13.326 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 02:12:13.592 +03:30 [INF] Server desktop-al52q8t:16764:0327bf59 successfully announced in 351/21840000000003 ms
2020-03-04 02:12:13.592 +03:30 [INF] Server desktop-al52q8t:16764:630239fc successfully announced in 254/2491 ms
2020-03-04 02:12:13.607 +03:30 [INF] Server desktop-al52q8t:16764:630239fc is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:12:13.607 +03:30 [INF] Server desktop-al52q8t:16764:0327bf59 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:12:14.107 +03:30 [INF] Server desktop-al52q8t:16764:630239fc all the dispatchers started
2020-03-04 02:12:14.185 +03:30 [INF] Server desktop-al52q8t:16764:0327bf59 all the dispatchers started
2020-03-04 02:12:15.667 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 02:12:15.668 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 02:12:15.670 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 02:12:15.670 +03:30 [INF] Hosting environment: Development
2020-03-04 02:12:15.672 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 02:12:17.134 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 02:12:17.528 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 02:12:17.564 +03:30 [INF] Request finished in 420.16990000000004ms 404 
2020-03-04 02:12:17.564 +03:30 [INF] Request finished in 24.6906ms 0 
2020-03-04 02:12:40.725 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:12:41.696 +03:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]', Current time: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-04 02:12:41.747 +03:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]', Current time: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-04 02:12:41.755 +03:30 [INF] Authorization failed.
2020-03-04 02:12:41.763 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 02:12:41.776 +03:30 [INF] Request finished in 1051.4362ms 401 
2020-03-04 02:12:46.504 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:12:46.533 +03:30 [INF] Successfully validated the token.
2020-03-04 02:12:46.536 +03:30 [INF] Authorization failed.
2020-03-04 02:12:46.549 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 02:12:46.551 +03:30 [INF] Request finished in 47.389500000000005ms 403 
2020-03-04 02:13:13.119 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:13:13.147 +03:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-04 02:13:13.194 +03:30 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-04 02:13:13.217 +03:30 [INF] Authorization failed.
2020-03-04 02:13:13.229 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 02:13:13.231 +03:30 [INF] Request finished in 111.90350000000001ms 401 
2020-03-04 02:13:15.258 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:13:15.262 +03:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-04 02:13:15.295 +03:30 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-04 02:13:15.309 +03:30 [INF] Authorization failed.
2020-03-04 02:13:15.311 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 02:13:15.313 +03:30 [INF] Request finished in 55.4499ms 401 
2020-03-04 02:13:29.687 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:13:29.691 +03:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidSignatureException: IDX10508: Signature validation failed. Signature is improperly formatted.
 ---> System.FormatException: IDX10400: Unable to decode: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' as Base64url encoded string.
   at Microsoft.IdentityModel.Tokens.Base64UrlEncoder.DecodeBytes(String str)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   --- End of inner exception stack trace ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-04 02:13:29.697 +03:30 [INF] Bearer was not authenticated. Failure message: IDX10508: Signature validation failed. Signature is improperly formatted.
2020-03-04 02:13:29.699 +03:30 [INF] Authorization failed.
2020-03-04 02:13:29.701 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 02:13:29.714 +03:30 [INF] Request finished in 27.6002ms 401 
2020-03-04 02:13:30.620 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:13:30.640 +03:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidSignatureException: IDX10508: Signature validation failed. Signature is improperly formatted.
 ---> System.FormatException: IDX10400: Unable to decode: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' as Base64url encoded string.
   at Microsoft.IdentityModel.Tokens.Base64UrlEncoder.DecodeBytes(String str)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   --- End of inner exception stack trace ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-04 02:13:30.658 +03:30 [INF] Bearer was not authenticated. Failure message: IDX10508: Signature validation failed. Signature is improperly formatted.
2020-03-04 02:13:30.661 +03:30 [INF] Authorization failed.
2020-03-04 02:13:30.674 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-04 02:13:30.676 +03:30 [INF] Request finished in 55.324000000000005ms 401 
2020-03-04 02:13:46.260 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:13:46.263 +03:30 [INF] Successfully validated the token.
2020-03-04 02:13:46.265 +03:30 [INF] Authorization failed.
2020-03-04 02:13:46.266 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 02:13:46.267 +03:30 [INF] Request finished in 7.883ms 403 
2020-03-04 02:15:15.756 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 02:15:16.123 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 02:15:16.179 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 02:15:16.201 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:15:16.203 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:15:16.204 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 02:15:16.308 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:15:16.318 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:15:16.320 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 02:15:16.545 +03:30 [INF] Server desktop-al52q8t:12976:f3053e8c successfully announced in 214/99380000000002 ms
2020-03-04 02:15:16.545 +03:30 [INF] Server desktop-al52q8t:12976:69814e6d successfully announced in 316/6904 ms
2020-03-04 02:15:16.563 +03:30 [INF] Server desktop-al52q8t:12976:f3053e8c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:15:16.563 +03:30 [INF] Server desktop-al52q8t:12976:69814e6d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:15:16.960 +03:30 [INF] Server desktop-al52q8t:12976:f3053e8c all the dispatchers started
2020-03-04 02:15:17.025 +03:30 [INF] Server desktop-al52q8t:12976:69814e6d all the dispatchers started
2020-03-04 02:15:18.477 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 02:15:18.479 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 02:15:18.480 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 02:15:18.481 +03:30 [INF] Hosting environment: Development
2020-03-04 02:15:18.483 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 02:15:19.684 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 02:15:19.821 +03:30 [INF] Request finished in 139.1899ms 404 
2020-03-04 02:15:19.869 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 02:15:19.886 +03:30 [INF] Request finished in 17.279400000000003ms 0 
2020-03-04 02:16:29.397 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 02:16:29.754 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 02:16:29.812 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 02:16:29.835 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:16:29.837 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:16:29.838 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 02:16:29.945 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:16:29.947 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:16:29.948 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 02:16:30.208 +03:30 [INF] Server desktop-al52q8t:11312:85450167 successfully announced in 344/97650000000004 ms
2020-03-04 02:16:30.208 +03:30 [INF] Server desktop-al52q8t:11312:85231cea successfully announced in 250/7623 ms
2020-03-04 02:16:30.226 +03:30 [INF] Server desktop-al52q8t:11312:85231cea is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:16:30.226 +03:30 [INF] Server desktop-al52q8t:11312:85450167 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:16:30.339 +03:30 [INF] 2 servers were removed due to timeout
2020-03-04 02:16:30.805 +03:30 [INF] Server desktop-al52q8t:11312:85231cea all the dispatchers started
2020-03-04 02:16:30.991 +03:30 [INF] Server desktop-al52q8t:11312:85450167 all the dispatchers started
2020-03-04 02:16:32.477 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 02:16:32.479 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 02:16:32.482 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 02:16:32.483 +03:30 [INF] Hosting environment: Development
2020-03-04 02:16:32.485 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 02:16:33.893 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 02:16:34.162 +03:30 [INF] Request finished in 271.1236ms 404 
2020-03-04 02:16:34.229 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 02:16:34.233 +03:30 [INF] Request finished in 4.0582ms 0 
2020-03-04 02:16:35.212 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:16:36.192 +03:30 [INF] Successfully validated the token.
2020-03-04 02:16:36.201 +03:30 [INF] Authorization failed.
2020-03-04 02:16:36.205 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 02:16:36.227 +03:30 [INF] Request finished in 1014.8498000000001ms 403 
2020-03-04 02:16:58.713 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 02:16:59.073 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 02:16:59.130 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 02:16:59.154 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:16:59.156 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:16:59.157 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 02:16:59.266 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:16:59.267 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:16:59.268 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 02:16:59.502 +03:30 [INF] Server desktop-al52q8t:9692:8b93c35d successfully announced in 319/0025 ms
2020-03-04 02:16:59.502 +03:30 [INF] Server desktop-al52q8t:9692:521a3631 successfully announced in 223/37140000000002 ms
2020-03-04 02:16:59.519 +03:30 [INF] Server desktop-al52q8t:9692:8b93c35d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:16:59.519 +03:30 [INF] Server desktop-al52q8t:9692:521a3631 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:17:00.155 +03:30 [INF] Server desktop-al52q8t:9692:8b93c35d all the dispatchers started
2020-03-04 02:17:00.155 +03:30 [INF] Server desktop-al52q8t:9692:521a3631 all the dispatchers started
2020-03-04 02:17:01.518 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 02:17:01.519 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 02:17:01.521 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 02:17:01.522 +03:30 [INF] Hosting environment: Development
2020-03-04 02:17:01.524 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 02:17:02.643 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:17:02.965 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 02:17:03.199 +03:30 [INF] Request finished in 233.21450000000002ms 404 
2020-03-04 02:17:03.339 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 02:17:03.486 +03:30 [INF] Request finished in 147.7683ms 0 
2020-03-04 02:17:03.932 +03:30 [INF] Successfully validated the token.
2020-03-04 02:17:03.941 +03:30 [INF] Authorization was successful.
2020-03-04 02:17:03.942 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:17:04.000 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:17:04.241 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-04 02:17:10.194 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 02:17:11.302 +03:30 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:17:11.350 +03:30 [INF] Executed action method SellAPI.Controllers.ProductController.GetAll (SellAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 7097.5801ms.
2020-03-04 02:17:11.360 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:17:11.401 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 7392.4364000000005ms
2020-03-04 02:17:11.403 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:17:11.416 +03:30 [INF] Request finished in 8776.2013ms 200 application/json; charset=utf-8
2020-03-04 02:25:50.622 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 02:25:51.039 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 02:25:51.095 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 02:25:51.120 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:25:51.122 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:25:51.124 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 02:25:51.216 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:25:51.218 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:25:51.219 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 02:25:51.491 +03:30 [INF] Server desktop-al52q8t:16144:d00aa8f4 successfully announced in 262/7155 ms
2020-03-04 02:25:51.491 +03:30 [INF] Server desktop-al52q8t:16144:da9410d1 successfully announced in 341/209 ms
2020-03-04 02:25:51.505 +03:30 [INF] Server desktop-al52q8t:16144:d00aa8f4 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:25:51.505 +03:30 [INF] Server desktop-al52q8t:16144:da9410d1 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:25:51.570 +03:30 [INF] 8 servers were removed due to timeout
2020-03-04 02:25:52.286 +03:30 [INF] Server desktop-al52q8t:16144:d00aa8f4 all the dispatchers started
2020-03-04 02:25:52.488 +03:30 [INF] Server desktop-al52q8t:16144:da9410d1 all the dispatchers started
2020-03-04 02:25:53.871 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 02:25:53.873 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 02:25:53.876 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 02:25:53.878 +03:30 [INF] Hosting environment: Development
2020-03-04 02:25:53.879 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 02:25:55.166 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 02:25:55.306 +03:30 [INF] Request finished in 141.8873ms 404 
2020-03-04 02:25:55.354 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 02:25:55.358 +03:30 [INF] Request finished in 3.5955000000000004ms 0 
2020-03-04 02:26:24.372 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 02:26:24.795 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 02:26:24.850 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 02:26:24.874 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:26:24.876 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:26:24.877 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 02:26:24.966 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:26:24.968 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:26:24.969 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 02:26:25.299 +03:30 [INF] Server desktop-al52q8t:15424:d61411dd successfully announced in 397/26210000000003 ms
2020-03-04 02:26:25.299 +03:30 [INF] Server desktop-al52q8t:15424:6204202d successfully announced in 315/3027 ms
2020-03-04 02:26:25.317 +03:30 [INF] Server desktop-al52q8t:15424:6204202d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:26:25.317 +03:30 [INF] Server desktop-al52q8t:15424:d61411dd is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:26:26.021 +03:30 [INF] Server desktop-al52q8t:15424:6204202d all the dispatchers started
2020-03-04 02:26:26.233 +03:30 [INF] Server desktop-al52q8t:15424:d61411dd all the dispatchers started
2020-03-04 02:26:27.542 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 02:26:27.544 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 02:26:27.546 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 02:26:27.548 +03:30 [INF] Hosting environment: Development
2020-03-04 02:26:27.549 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 02:26:29.086 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 02:26:29.086 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:26:29.488 +03:30 [INF] Request finished in 402.06510000000003ms 404 
2020-03-04 02:26:31.940 +03:30 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-04 02:26:32.101 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.<Invoke>g__AwaitMatcher|8_0(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task`1 matcherTask)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-04 02:26:32.203 +03:30 [INF] Request finished in 3118.0107000000003ms 500 text/plain
2020-03-04 02:26:36.586 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:26:36.633 +03:30 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-04 02:26:36.638 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-04 02:26:36.647 +03:30 [INF] Request finished in 61.6062ms 500 text/plain
2020-03-04 02:26:40.186 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:26:40.194 +03:30 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-04 02:26:40.204 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-04 02:26:40.212 +03:30 [INF] Request finished in 27.2848ms 500 text/plain
2020-03-04 02:27:11.427 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 02:27:11.837 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 02:27:11.891 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 02:27:11.917 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:27:11.918 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:27:11.919 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 02:27:12.032 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:27:12.033 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:27:12.034 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 02:27:12.292 +03:30 [INF] Server desktop-al52q8t:11788:b55fed8c successfully announced in 248/57840000000002 ms
2020-03-04 02:27:12.292 +03:30 [INF] Server desktop-al52q8t:11788:22f6ebf7 successfully announced in 347/62890000000004 ms
2020-03-04 02:27:12.315 +03:30 [INF] Server desktop-al52q8t:11788:b55fed8c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:27:12.315 +03:30 [INF] Server desktop-al52q8t:11788:22f6ebf7 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:27:12.955 +03:30 [INF] Server desktop-al52q8t:11788:b55fed8c all the dispatchers started
2020-03-04 02:27:13.261 +03:30 [INF] Server desktop-al52q8t:11788:22f6ebf7 all the dispatchers started
2020-03-04 02:27:14.433 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 02:27:14.435 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 02:27:14.436 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 02:27:14.438 +03:30 [INF] Hosting environment: Development
2020-03-04 02:27:14.440 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 02:27:15.916 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-04 02:27:16.481 +03:30 [INF] Request finished in 500.24150000000003ms 404 
2020-03-04 02:27:16.660 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-04 02:27:16.817 +03:30 [INF] Request finished in 170.8245ms 0 
2020-03-04 02:27:19.800 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:27:21.233 +03:30 [INF] Successfully validated the token.
2020-03-04 02:27:21.242 +03:30 [INF] Authorization failed.
2020-03-04 02:27:21.246 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 02:27:21.260 +03:30 [INF] Request finished in 1460.9065ms 403 
2020-03-04 02:27:22.827 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:27:22.832 +03:30 [INF] Successfully validated the token.
2020-03-04 02:27:22.833 +03:30 [INF] Authorization failed.
2020-03-04 02:27:22.835 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 02:27:22.837 +03:30 [INF] Request finished in 9.398100000000001ms 403 
2020-03-04 02:27:40.657 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-04 02:27:40.689 +03:30 [INF] Successfully validated the token.
2020-03-04 02:27:40.703 +03:30 [INF] Authorization was successful.
2020-03-04 02:27:40.705 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:27:40.738 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:27:40.867 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-04 02:27:45.282 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 02:27:46.439 +03:30 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:29:28.515 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 02:29:28.785 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 02:29:28.812 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 02:29:28.830 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:29:28.832 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:29:28.833 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 02:29:28.889 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 02:29:28.890 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 02:29:28.891 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 02:29:29.022 +03:30 [INF] Server desktop-al52q8t:12204:cd18a471 successfully announced in 173/8856 ms
2020-03-04 02:29:29.022 +03:30 [INF] Server desktop-al52q8t:12204:7f12e8f9 successfully announced in 128/46720000000002 ms
2020-03-04 02:29:29.026 +03:30 [INF] Server desktop-al52q8t:12204:cd18a471 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:29:29.026 +03:30 [INF] Server desktop-al52q8t:12204:7f12e8f9 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 02:29:29.052 +03:30 [INF] Server desktop-al52q8t:12204:7f12e8f9 all the dispatchers started
2020-03-04 02:29:29.054 +03:30 [INF] Server desktop-al52q8t:12204:cd18a471 all the dispatchers started
2020-03-04 02:29:29.160 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 02:29:29.161 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 02:29:29.162 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 02:29:29.163 +03:30 [INF] Hosting environment: Development
2020-03-04 02:29:29.164 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 02:34:29.034 +03:30 [INF] 6 servers were removed due to timeout
2020-03-04 02:35:39.569 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:35:39.849 +03:30 [INF] Successfully validated the token.
2020-03-04 02:35:39.858 +03:30 [INF] Authorization was successful.
2020-03-04 02:35:39.860 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:35:39.885 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:35:40.378 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 02:35:40.798 +03:30 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:35:40.838 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:35:40.861 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 969.3151ms
2020-03-04 02:35:40.864 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:35:40.874 +03:30 [INF] Request finished in 1305.6148ms 200 application/json; charset=utf-8
2020-03-04 02:43:43.282 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:43:43.287 +03:30 [INF] Successfully validated the token.
2020-03-04 02:43:43.288 +03:30 [INF] Authorization was successful.
2020-03-04 02:43:43.289 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:43:43.290 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:43:43.305 +03:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:43:43.309 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:43:43.313 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 21.1868ms
2020-03-04 02:43:43.314 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:43:43.316 +03:30 [INF] Request finished in 33.7794ms 200 application/json; charset=utf-8
2020-03-04 02:43:48.028 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:43:48.032 +03:30 [INF] Successfully validated the token.
2020-03-04 02:43:48.034 +03:30 [INF] Authorization was successful.
2020-03-04 02:43:48.035 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:43:48.037 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:43:48.047 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:43:48.052 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:43:48.054 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 14.5799ms
2020-03-04 02:43:48.055 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:43:48.057 +03:30 [INF] Request finished in 29.564500000000002ms 200 application/json; charset=utf-8
2020-03-04 02:48:19.336 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:48:19.339 +03:30 [INF] Successfully validated the token.
2020-03-04 02:48:19.340 +03:30 [INF] Authorization was successful.
2020-03-04 02:48:19.341 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:48:19.342 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:48:19.349 +03:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:48:19.354 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:48:19.357 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 12.7417ms
2020-03-04 02:48:19.358 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:48:19.360 +03:30 [INF] Request finished in 23.300900000000002ms 200 application/json; charset=utf-8
2020-03-04 02:48:50.920 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:48:50.926 +03:30 [INF] Successfully validated the token.
2020-03-04 02:48:50.929 +03:30 [INF] Authorization was successful.
2020-03-04 02:48:50.931 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:48:50.935 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:48:50.944 +03:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:48:50.953 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:48:50.958 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 17.5272ms
2020-03-04 02:48:50.960 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:48:50.963 +03:30 [INF] Request finished in 43.3708ms 200 application/json; charset=utf-8
2020-03-04 02:49:53.929 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:49:53.932 +03:30 [INF] Successfully validated the token.
2020-03-04 02:49:53.934 +03:30 [INF] Authorization was successful.
2020-03-04 02:49:53.935 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:49:53.937 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:49:53.943 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:49:53.948 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:49:53.951 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 11.935400000000001ms
2020-03-04 02:49:53.953 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:49:53.955 +03:30 [INF] Request finished in 25.842000000000002ms 200 application/json; charset=utf-8
2020-03-04 02:50:29.289 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:50:29.292 +03:30 [INF] Successfully validated the token.
2020-03-04 02:50:29.293 +03:30 [INF] Authorization was successful.
2020-03-04 02:50:29.294 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:50:29.296 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:50:29.301 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:50:29.306 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:50:29.308 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 10.300600000000001ms
2020-03-04 02:50:29.309 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:50:29.310 +03:30 [INF] Request finished in 21.873ms 200 application/json; charset=utf-8
2020-03-04 02:51:02.813 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:51:02.815 +03:30 [INF] Successfully validated the token.
2020-03-04 02:51:02.817 +03:30 [INF] Authorization was successful.
2020-03-04 02:51:02.818 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:51:02.819 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:51:02.822 +03:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:51:02.825 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:51:02.827 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 6.4937000000000005ms
2020-03-04 02:51:02.828 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:51:02.830 +03:30 [INF] Request finished in 17.218ms 200 application/json; charset=utf-8
2020-03-04 02:51:40.222 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:51:40.225 +03:30 [INF] Successfully validated the token.
2020-03-04 02:51:40.226 +03:30 [INF] Authorization was successful.
2020-03-04 02:51:40.227 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:51:40.229 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:51:40.234 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:51:40.239 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:51:40.241 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 9.718200000000001ms
2020-03-04 02:51:40.242 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:51:40.244 +03:30 [INF] Request finished in 22.5465ms 200 application/json; charset=utf-8
2020-03-04 02:53:33.078 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:53:33.081 +03:30 [INF] Successfully validated the token.
2020-03-04 02:53:33.083 +03:30 [INF] Authorization was successful.
2020-03-04 02:53:33.084 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:53:33.085 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:53:33.090 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:53:33.094 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:53:33.096 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 9.732000000000001ms
2020-03-04 02:53:33.097 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:53:33.098 +03:30 [INF] Request finished in 20.4739ms 200 application/json; charset=utf-8
2020-03-04 02:54:47.883 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:54:47.887 +03:30 [INF] Successfully validated the token.
2020-03-04 02:54:47.888 +03:30 [INF] Authorization was successful.
2020-03-04 02:54:47.888 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:54:47.890 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:54:47.896 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:54:47.901 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:54:47.902 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 10.019400000000001ms
2020-03-04 02:54:47.903 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:54:47.905 +03:30 [INF] Request finished in 21.4728ms 200 application/json; charset=utf-8
2020-03-04 02:56:16.168 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:16.170 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:16.171 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:16.172 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:16.174 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:16.185 +03:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:16.191 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:16.193 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 12.9558ms
2020-03-04 02:56:16.194 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:16.196 +03:30 [INF] Request finished in 27.866300000000003ms 200 application/json; charset=utf-8
2020-03-04 02:56:47.165 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:47.168 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:47.169 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:47.169 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:47.170 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:47.177 +03:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:47.181 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:47.183 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 11.0433ms
2020-03-04 02:56:47.185 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:47.186 +03:30 [INF] Request finished in 20.9081ms 200 application/json; charset=utf-8
2020-03-04 02:56:48.642 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:48.645 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:48.646 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:48.647 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:48.648 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:48.651 +03:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:48.655 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:48.656 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 6.9725ms
2020-03-04 02:56:48.658 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:48.659 +03:30 [INF] Request finished in 17.0801ms 200 application/json; charset=utf-8
2020-03-04 02:56:49.027 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:49.030 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:49.031 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:49.032 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:49.033 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:49.037 +03:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:49.041 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:49.043 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 7.3500000000000005ms
2020-03-04 02:56:49.044 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:49.046 +03:30 [INF] Request finished in 18.9812ms 200 application/json; charset=utf-8
2020-03-04 02:56:49.296 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:49.298 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:49.300 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:49.301 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:49.302 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:49.305 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:49.308 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:49.310 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 5.6949000000000005ms
2020-03-04 02:56:49.311 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:49.312 +03:30 [INF] Request finished in 15.3536ms 200 application/json; charset=utf-8
2020-03-04 02:56:49.577 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:49.579 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:49.581 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:49.582 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:49.584 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:49.588 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:49.591 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:49.593 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 6.4632000000000005ms
2020-03-04 02:56:49.594 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:49.596 +03:30 [INF] Request finished in 18.9099ms 200 application/json; charset=utf-8
2020-03-04 02:56:49.814 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:49.816 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:49.817 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:49.818 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:49.819 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:49.823 +03:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:49.827 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:49.829 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 8.2601ms
2020-03-04 02:56:49.831 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:49.832 +03:30 [INF] Request finished in 18.3181ms 200 application/json; charset=utf-8
2020-03-04 02:56:49.978 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:49.980 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:49.981 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:49.982 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:49.983 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:49.986 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:49.989 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:49.991 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 5.7384ms
2020-03-04 02:56:49.992 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:49.993 +03:30 [INF] Request finished in 14.446000000000002ms 200 application/json; charset=utf-8
2020-03-04 02:56:50.145 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:50.146 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:50.147 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:50.149 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:50.150 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:50.153 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:50.156 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:50.157 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 5.6298ms
2020-03-04 02:56:50.158 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:50.160 +03:30 [INF] Request finished in 14.9551ms 200 application/json; charset=utf-8
2020-03-04 02:56:50.318 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:50.320 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:50.322 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:50.323 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:50.325 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:50.329 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:50.332 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:50.333 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 5.0826ms
2020-03-04 02:56:50.334 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:50.336 +03:30 [INF] Request finished in 17.623ms 200 application/json; charset=utf-8
2020-03-04 02:56:50.491 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:50.493 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:50.494 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:50.495 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:50.497 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:50.500 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:50.502 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:50.504 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 5.0445ms
2020-03-04 02:56:50.506 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:50.507 +03:30 [INF] Request finished in 15.911900000000001ms 200 application/json; charset=utf-8
2020-03-04 02:56:51.312 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:51.314 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:51.315 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:51.316 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:51.318 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:51.321 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:51.324 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:51.325 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 5.1128ms
2020-03-04 02:56:51.326 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:51.327 +03:30 [INF] Request finished in 14.6674ms 200 application/json; charset=utf-8
2020-03-04 02:56:51.650 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:51.652 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:51.653 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:51.654 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:51.656 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:51.660 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:51.663 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:51.664 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 5.050800000000001ms
2020-03-04 02:56:51.665 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:51.666 +03:30 [INF] Request finished in 16.098100000000002ms 200 application/json; charset=utf-8
2020-03-04 02:56:51.873 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:51.875 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:51.876 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:51.877 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:51.878 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:51.880 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:51.884 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:51.886 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 6.1803ms
2020-03-04 02:56:51.887 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:51.889 +03:30 [INF] Request finished in 16.035500000000003ms 200 application/json; charset=utf-8
2020-03-04 02:56:52.047 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:52.049 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:52.050 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:52.051 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:52.053 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:52.056 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:52.059 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:52.060 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 5.284400000000001ms
2020-03-04 02:56:52.061 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:52.062 +03:30 [INF] Request finished in 15.0896ms 200 application/json; charset=utf-8
2020-03-04 02:56:52.207 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:52.209 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:52.210 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:52.212 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:52.213 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:52.217 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:52.220 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:52.222 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 5.6538ms
2020-03-04 02:56:52.223 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:52.224 +03:30 [INF] Request finished in 17.3165ms 200 application/json; charset=utf-8
2020-03-04 02:56:52.378 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:52.380 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:52.382 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:52.383 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:52.385 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:52.389 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:52.391 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:52.393 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 5.2504ms
2020-03-04 02:56:52.394 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:52.395 +03:30 [INF] Request finished in 16.7ms 200 application/json; charset=utf-8
2020-03-04 02:56:52.582 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:56:52.585 +03:30 [INF] Successfully validated the token.
2020-03-04 02:56:52.586 +03:30 [INF] Authorization was successful.
2020-03-04 02:56:52.588 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:52.591 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:56:52.594 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:56:52.597 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:56:52.598 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 5.2609ms
2020-03-04 02:56:52.600 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:56:52.602 +03:30 [INF] Request finished in 19.1959ms 200 application/json; charset=utf-8
2020-03-04 02:57:45.282 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:57:45.285 +03:30 [INF] Successfully validated the token.
2020-03-04 02:57:45.286 +03:30 [INF] Authorization was successful.
2020-03-04 02:57:45.286 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:45.288 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:57:45.294 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:57:45.298 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:57:45.300 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 9.3286ms
2020-03-04 02:57:45.301 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:45.302 +03:30 [INF] Request finished in 19.6478ms 200 application/json; charset=utf-8
2020-03-04 02:57:58.861 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:57:58.863 +03:30 [INF] Successfully validated the token.
2020-03-04 02:57:58.864 +03:30 [INF] Authorization was successful.
2020-03-04 02:57:58.865 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:58.866 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:57:58.870 +03:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:57:58.874 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:57:58.875 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 7.2869ms
2020-03-04 02:57:58.877 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:58.878 +03:30 [INF] Request finished in 17.036ms 200 application/json; charset=utf-8
2020-03-04 02:57:58.962 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:57:58.963 +03:30 [INF] Successfully validated the token.
2020-03-04 02:57:58.964 +03:30 [INF] Authorization was successful.
2020-03-04 02:57:58.965 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:58.967 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:57:58.970 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:57:58.974 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:57:58.976 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 6.6199ms
2020-03-04 02:57:58.977 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:58.978 +03:30 [INF] Request finished in 16.4904ms 200 application/json; charset=utf-8
2020-03-04 02:57:59.164 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:57:59.165 +03:30 [INF] Successfully validated the token.
2020-03-04 02:57:59.166 +03:30 [INF] Authorization was successful.
2020-03-04 02:57:59.167 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:59.168 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:57:59.171 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:57:59.173 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:57:59.174 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 4.3297ms
2020-03-04 02:57:59.175 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:59.176 +03:30 [INF] Request finished in 12.5531ms 200 application/json; charset=utf-8
2020-03-04 02:57:59.333 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:57:59.335 +03:30 [INF] Successfully validated the token.
2020-03-04 02:57:59.336 +03:30 [INF] Authorization was successful.
2020-03-04 02:57:59.336 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:59.337 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:57:59.340 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:57:59.343 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:57:59.344 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 4.595400000000001ms
2020-03-04 02:57:59.345 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:59.346 +03:30 [INF] Request finished in 13.4242ms 200 application/json; charset=utf-8
2020-03-04 02:57:59.544 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:57:59.546 +03:30 [INF] Successfully validated the token.
2020-03-04 02:57:59.547 +03:30 [INF] Authorization was successful.
2020-03-04 02:57:59.548 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:59.550 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:57:59.558 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:57:59.560 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:57:59.562 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 4.6853ms
2020-03-04 02:57:59.563 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:59.564 +03:30 [INF] Request finished in 20.1093ms 200 application/json; charset=utf-8
2020-03-04 02:57:59.735 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:57:59.737 +03:30 [INF] Successfully validated the token.
2020-03-04 02:57:59.738 +03:30 [INF] Authorization was successful.
2020-03-04 02:57:59.739 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:59.740 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:57:59.742 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:57:59.745 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:57:59.746 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 4.6344ms
2020-03-04 02:57:59.747 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:57:59.748 +03:30 [INF] Request finished in 12.733500000000001ms 200 application/json; charset=utf-8
2020-03-04 02:58:14.950 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 02:58:14.952 +03:30 [INF] Successfully validated the token.
2020-03-04 02:58:14.953 +03:30 [INF] Authorization was successful.
2020-03-04 02:58:14.953 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:58:14.955 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 02:58:14.957 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 02:58:14.960 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 02:58:14.961 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 4.3426ms
2020-03-04 02:58:14.962 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 02:58:14.964 +03:30 [INF] Request finished in 13.643ms 200 application/json; charset=utf-8
2020-03-04 03:01:26.549 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:01:26.551 +03:30 [INF] Successfully validated the token.
2020-03-04 03:01:26.552 +03:30 [INF] Authorization was successful.
2020-03-04 03:01:26.553 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:01:26.554 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:01:26.558 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:01:26.561 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:01:26.563 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 6.6481ms
2020-03-04 03:01:26.564 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:01:26.565 +03:30 [INF] Request finished in 16.4658ms 200 application/json; charset=utf-8
2020-03-04 03:02:00.067 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:02:00.068 +03:30 [INF] Successfully validated the token.
2020-03-04 03:02:00.069 +03:30 [INF] Authorization was successful.
2020-03-04 03:02:00.070 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:02:00.072 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:02:00.076 +03:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:02:00.079 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:02:00.081 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 6.1578ms
2020-03-04 03:02:00.082 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:02:00.083 +03:30 [INF] Request finished in 16.2778ms 200 application/json; charset=utf-8
2020-03-04 03:02:33.600 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:02:33.602 +03:30 [INF] Successfully validated the token.
2020-03-04 03:02:33.604 +03:30 [INF] Authorization was successful.
2020-03-04 03:02:33.605 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:02:33.606 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:02:33.610 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:02:33.614 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:02:33.615 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 6.6938ms
2020-03-04 03:02:33.616 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:02:33.616 +03:30 [INF] Request finished in 16.3794ms 200 application/json; charset=utf-8
2020-03-04 03:03:25.047 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:03:25.049 +03:30 [INF] Successfully validated the token.
2020-03-04 03:03:25.050 +03:30 [INF] Authorization was successful.
2020-03-04 03:03:25.050 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:03:25.052 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:03:25.056 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:03:25.059 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:03:25.060 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 6.5166ms
2020-03-04 03:03:25.062 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:03:25.063 +03:30 [INF] Request finished in 16.1177ms 200 application/json; charset=utf-8
2020-03-04 03:14:34.600 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:14:34.602 +03:30 [INF] Successfully validated the token.
2020-03-04 03:14:34.603 +03:30 [INF] Authorization was successful.
2020-03-04 03:14:34.603 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:14:34.604 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:14:34.612 +03:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:14:34.616 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:14:34.617 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 11.2665ms
2020-03-04 03:14:34.618 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:14:34.619 +03:30 [INF] Request finished in 19.5914ms 200 application/json; charset=utf-8
2020-03-04 03:17:03.892 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 03:17:04.165 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 03:17:04.201 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 03:17:04.221 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:17:04.223 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:17:04.225 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 03:17:04.287 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:17:04.288 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:17:04.289 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 03:17:04.427 +03:30 [INF] Server desktop-al52q8t:9356:e1b871d3 successfully announced in 183/002 ms
2020-03-04 03:17:04.427 +03:30 [INF] Server desktop-al52q8t:9356:ae9d0ebd successfully announced in 135/65200000000002 ms
2020-03-04 03:17:04.432 +03:30 [INF] Server desktop-al52q8t:9356:e1b871d3 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:17:04.432 +03:30 [INF] Server desktop-al52q8t:9356:ae9d0ebd is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:17:04.457 +03:30 [INF] Server desktop-al52q8t:9356:e1b871d3 all the dispatchers started
2020-03-04 03:17:04.464 +03:30 [INF] Server desktop-al52q8t:9356:ae9d0ebd all the dispatchers started
2020-03-04 03:17:04.568 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 03:17:04.569 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 03:17:04.570 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 03:17:04.571 +03:30 [INF] Hosting environment: Development
2020-03-04 03:17:04.572 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 03:17:04.674 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:17:04.674 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:17:04.831 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:17:04.994 +03:30 [INF] Successfully validated the token.
2020-03-04 03:17:04.994 +03:30 [INF] Successfully validated the token.
2020-03-04 03:17:04.994 +03:30 [INF] Successfully validated the token.
2020-03-04 03:17:05.003 +03:30 [INF] Authorization failed.
2020-03-04 03:17:05.003 +03:30 [INF] Authorization failed.
2020-03-04 03:17:05.003 +03:30 [INF] Authorization failed.
2020-03-04 03:17:05.006 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 03:17:05.006 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 03:17:05.006 +03:30 [INF] AuthenticationScheme: Bearer was forbidden.
2020-03-04 03:17:05.014 +03:30 [INF] Request finished in 340.9413ms 403 
2020-03-04 03:17:05.014 +03:30 [INF] Request finished in 182.54080000000002ms 403 
2020-03-04 03:17:05.014 +03:30 [INF] Request finished in 340.9413ms 403 
2020-03-04 03:21:59.277 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 03:21:59.582 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 03:21:59.618 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 03:21:59.644 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:21:59.646 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:21:59.647 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 03:21:59.698 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:21:59.699 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:21:59.700 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 03:21:59.858 +03:30 [INF] Server desktop-al52q8t:11392:ee9f37c7 successfully announced in 195/61620000000002 ms
2020-03-04 03:21:59.858 +03:30 [INF] Server desktop-al52q8t:11392:2b025543 successfully announced in 156/02870000000001 ms
2020-03-04 03:21:59.863 +03:30 [INF] Server desktop-al52q8t:11392:ee9f37c7 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:21:59.863 +03:30 [INF] Server desktop-al52q8t:11392:2b025543 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:21:59.871 +03:30 [INF] 2 servers were removed due to timeout
2020-03-04 03:21:59.925 +03:30 [INF] Server desktop-al52q8t:11392:2b025543 all the dispatchers started
2020-03-04 03:21:59.933 +03:30 [INF] Server desktop-al52q8t:11392:ee9f37c7 all the dispatchers started
2020-03-04 03:22:00.002 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 03:22:00.052 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 03:22:00.058 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 03:22:00.059 +03:30 [INF] Hosting environment: Development
2020-03-04 03:22:00.060 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 03:22:18.213 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 03:22:18.444 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 03:22:18.471 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 03:22:18.486 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:22:18.487 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:22:18.489 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 03:22:18.535 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:22:18.536 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:22:18.537 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 03:22:18.664 +03:30 [INF] Server desktop-al52q8t:6636:84554cb2 successfully announced in 124/6967 ms
2020-03-04 03:22:18.664 +03:30 [INF] Server desktop-al52q8t:6636:aed4a1cc successfully announced in 162/2835 ms
2020-03-04 03:22:18.669 +03:30 [INF] Server desktop-al52q8t:6636:84554cb2 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:22:18.669 +03:30 [INF] Server desktop-al52q8t:6636:aed4a1cc is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:22:18.683 +03:30 [INF] Server desktop-al52q8t:6636:84554cb2 all the dispatchers started
2020-03-04 03:22:18.685 +03:30 [INF] Server desktop-al52q8t:6636:aed4a1cc all the dispatchers started
2020-03-04 03:22:18.787 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 03:22:18.788 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 03:22:18.790 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 03:22:18.790 +03:30 [INF] Hosting environment: Development
2020-03-04 03:22:18.791 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 03:22:23.744 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 03:22:23.985 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 03:22:24.018 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 03:22:24.033 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:22:24.036 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:22:24.037 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 03:22:24.090 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:22:24.091 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:22:24.093 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 03:22:24.242 +03:30 [INF] Server desktop-al52q8t:22496:4b599b2d successfully announced in 146/95350000000002 ms
2020-03-04 03:22:24.242 +03:30 [INF] Server desktop-al52q8t:22496:265f2891 successfully announced in 193/38920000000002 ms
2020-03-04 03:22:24.247 +03:30 [INF] Server desktop-al52q8t:22496:265f2891 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:22:24.247 +03:30 [INF] Server desktop-al52q8t:22496:4b599b2d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:22:24.266 +03:30 [INF] Server desktop-al52q8t:22496:265f2891 all the dispatchers started
2020-03-04 03:22:24.275 +03:30 [INF] Server desktop-al52q8t:22496:4b599b2d all the dispatchers started
2020-03-04 03:22:24.360 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 03:22:24.362 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 03:22:24.363 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 03:22:24.365 +03:30 [INF] Hosting environment: Development
2020-03-04 03:22:24.366 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 03:22:32.400 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 03:22:32.660 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 03:22:32.710 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 03:22:32.740 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:22:32.743 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:22:32.746 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 03:22:32.822 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:22:32.823 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:22:32.824 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 03:22:32.953 +03:30 [INF] Server desktop-al52q8t:5228:d4d40f02 successfully announced in 127/2423 ms
2020-03-04 03:22:32.953 +03:30 [INF] Server desktop-al52q8t:5228:22d14046 successfully announced in 187/3041 ms
2020-03-04 03:22:32.959 +03:30 [INF] Server desktop-al52q8t:5228:22d14046 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:22:32.959 +03:30 [INF] Server desktop-al52q8t:5228:d4d40f02 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:22:32.984 +03:30 [INF] Server desktop-al52q8t:5228:d4d40f02 all the dispatchers started
2020-03-04 03:22:32.987 +03:30 [INF] Server desktop-al52q8t:5228:22d14046 all the dispatchers started
2020-03-04 03:22:33.104 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 03:22:33.105 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 03:22:33.106 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 03:22:33.107 +03:30 [INF] Hosting environment: Development
2020-03-04 03:22:33.109 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 03:22:33.234 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:33.234 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:33.234 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:33.234 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:33.361 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:33.361 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:33.362 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:33.518 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:33.549 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:33.585 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:33.585 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:33.585 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:33.585 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:33.585 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:33.585 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:33.585 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:33.585 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:33.585 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:33.595 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:33.595 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:33.595 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:33.595 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:33.595 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:33.595 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:33.595 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:33.595 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:33.595 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:33.596 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:33.597 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:33.597 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:33.598 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:33.599 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:33.599 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:33.600 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:33.601 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:33.601 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:33.632 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:33.632 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:33.632 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:33.632 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:33.632 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:33.632 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:33.632 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:33.632 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:33.632 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:33.710 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:33.711 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:33.712 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:33.713 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:33.714 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:34.311 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.311 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.311 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.311 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.311 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.311 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.311 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.312 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.312 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.319 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.840 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:34.841 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:34.842 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:34.843 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:34.843 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:34.843 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:34.843 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:34.844 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:34.846 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:34.846 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:34.847 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:34.848 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:34.849 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:34.849 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:34.851 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:34.852 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:34.852 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:34.853 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:34.859 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.859 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.859 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:34.860 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:34.866 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.868 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:34.969 +03:30 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:34.969 +03:30 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:34.969 +03:30 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:34.969 +03:30 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:34.969 +03:30 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:34.969 +03:30 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:34.969 +03:30 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:34.969 +03:30 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:34.969 +03:30 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:35.052 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.052 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.052 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.052 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.052 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.052 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.065 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.065 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.065 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.098 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1448.9914ms
2020-03-04 03:22:35.098 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1451.2897ms
2020-03-04 03:22:35.098 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1438.1794ms
2020-03-04 03:22:35.098 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1441.7447ms
2020-03-04 03:22:35.098 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1443.7658000000001ms
2020-03-04 03:22:35.098 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1436.0948ms
2020-03-04 03:22:35.098 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 232.24990000000003ms
2020-03-04 03:22:35.098 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1446.1494ms
2020-03-04 03:22:35.098 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1433.3151ms
2020-03-04 03:22:35.101 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.101 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.102 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.104 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.105 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.107 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.108 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.110 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.111 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.123 +03:30 [INF] Request finished in 1890.1574ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.123 +03:30 [INF] Request finished in 1890.145ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.123 +03:30 [INF] Request finished in 1573.8352ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.123 +03:30 [INF] Request finished in 1603.9723000000001ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.123 +03:30 [INF] Request finished in 1759.9582ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.123 +03:30 [INF] Request finished in 282.39050000000003ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.123 +03:30 [INF] Request finished in 1890.2827ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.123 +03:30 [INF] Request finished in 1761.2218ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.123 +03:30 [INF] Request finished in 1890.1901ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.125 +03:30 [INF] Executed DbCommand (208ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:35.125 +03:30 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:35.126 +03:30 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:35.132 +03:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:35.133 +03:30 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:35.135 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.137 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.140 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.142 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.144 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:35.145 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1510.2040000000002ms
2020-03-04 03:22:35.146 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1430.1446ms
2020-03-04 03:22:35.147 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 289.1006ms
2020-03-04 03:22:35.148 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 282.6546ms
2020-03-04 03:22:35.149 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 281.3937ms
2020-03-04 03:22:35.150 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.151 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.152 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.153 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.155 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:35.159 +03:30 [INF] Request finished in 317.8774ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.159 +03:30 [INF] Request finished in 1797.8410000000001ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.159 +03:30 [INF] Request finished in 1449.4940000000001ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.160 +03:30 [INF] Request finished in 316.5991ms 200 application/json; charset=utf-8
2020-03-04 03:22:35.161 +03:30 [INF] Request finished in 317.7018ms 200 application/json; charset=utf-8
2020-03-04 03:22:43.783 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 03:22:44.063 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 03:22:44.095 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 03:22:44.111 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:22:44.112 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:22:44.113 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 03:22:44.171 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:22:44.172 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:22:44.173 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 03:22:44.318 +03:30 [INF] Server desktop-al52q8t:21220:f632f054 successfully announced in 188/02020000000002 ms
2020-03-04 03:22:44.318 +03:30 [INF] Server desktop-al52q8t:21220:1798322b successfully announced in 142/95170000000002 ms
2020-03-04 03:22:44.322 +03:30 [INF] Server desktop-al52q8t:21220:1798322b is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:22:44.322 +03:30 [INF] Server desktop-al52q8t:21220:f632f054 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:22:44.360 +03:30 [INF] Server desktop-al52q8t:21220:1798322b all the dispatchers started
2020-03-04 03:22:44.365 +03:30 [INF] Server desktop-al52q8t:21220:f632f054 all the dispatchers started
2020-03-04 03:22:44.451 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 03:22:44.452 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 03:22:44.453 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 03:22:44.454 +03:30 [INF] Hosting environment: Development
2020-03-04 03:22:44.455 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 03:22:44.577 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:44.843 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:44.850 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:44.852 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:44.876 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:45.398 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:22:45.809 +03:30 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:45.848 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:45.871 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 988.0749000000001ms
2020-03-04 03:22:45.874 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:45.885 +03:30 [INF] Request finished in 1309.4615000000001ms 200 application/json; charset=utf-8
2020-03-04 03:22:50.980 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:50.986 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:50.987 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:50.988 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:50.990 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:51.003 +03:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:51.007 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:51.008 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 15.971300000000001ms
2020-03-04 03:22:51.010 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:51.011 +03:30 [INF] Request finished in 31.146500000000003ms 200 application/json; charset=utf-8
2020-03-04 03:22:55.077 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:22:55.083 +03:30 [INF] Successfully validated the token.
2020-03-04 03:22:55.085 +03:30 [INF] Authorization was successful.
2020-03-04 03:22:55.086 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:55.088 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:22:55.097 +03:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:22:55.102 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:22:55.104 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 12.8049ms
2020-03-04 03:22:55.106 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:22:55.109 +03:30 [INF] Request finished in 31.6474ms 200 application/json; charset=utf-8
2020-03-04 03:23:02.561 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 03:23:02.809 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 03:23:02.837 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 03:23:02.853 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:23:02.855 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:23:02.856 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 03:23:02.906 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:23:02.908 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:23:02.909 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 03:23:03.036 +03:30 [INF] Server desktop-al52q8t:7444:31048407 successfully announced in 168/0447 ms
2020-03-04 03:23:03.036 +03:30 [INF] Server desktop-al52q8t:7444:a0c055a1 successfully announced in 125/1662 ms
2020-03-04 03:23:03.040 +03:30 [INF] Server desktop-al52q8t:7444:a0c055a1 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:23:03.040 +03:30 [INF] Server desktop-al52q8t:7444:31048407 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:23:03.052 +03:30 [INF] Server desktop-al52q8t:7444:a0c055a1 all the dispatchers started
2020-03-04 03:23:03.056 +03:30 [INF] Server desktop-al52q8t:7444:31048407 all the dispatchers started
2020-03-04 03:23:03.162 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 03:23:03.163 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 03:23:03.165 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 03:23:03.167 +03:30 [INF] Hosting environment: Development
2020-03-04 03:23:03.168 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 03:23:03.636 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:23:03.923 +03:30 [INF] Successfully validated the token.
2020-03-04 03:23:03.931 +03:30 [INF] Authorization was successful.
2020-03-04 03:23:03.933 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:23:03.958 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:23:04.500 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:23:04.935 +03:30 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:23:04.975 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:23:04.999 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1032.9934ms
2020-03-04 03:23:05.002 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:23:05.014 +03:30 [INF] Request finished in 1378.0925ms 200 application/json; charset=utf-8
2020-03-04 03:23:13.795 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:23:13.799 +03:30 [INF] Successfully validated the token.
2020-03-04 03:23:13.801 +03:30 [INF] Authorization was successful.
2020-03-04 03:23:13.802 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:23:13.803 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:23:13.815 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:23:13.820 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:23:13.822 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 14.676200000000001ms
2020-03-04 03:23:13.823 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:23:13.824 +03:30 [INF] Request finished in 29.790100000000002ms 200 application/json; charset=utf-8
2020-03-04 03:24:04.164 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-04 03:24:04.422 +03:30 [INF] Hangfire SQL objects installed.
2020-03-04 03:24:04.453 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-04 03:24:04.468 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:24:04.470 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:24:04.471 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-04 03:24:04.517 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-04 03:24:04.518 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-04 03:24:04.519 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-04 03:24:04.640 +03:30 [INF] Server desktop-al52q8t:15448:750f3513 successfully announced in 154/87130000000002 ms
2020-03-04 03:24:04.640 +03:30 [INF] Server desktop-al52q8t:15448:b81260c7 successfully announced in 118/37880000000001 ms
2020-03-04 03:24:04.644 +03:30 [INF] Server desktop-al52q8t:15448:b81260c7 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:24:04.644 +03:30 [INF] Server desktop-al52q8t:15448:750f3513 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-04 03:24:04.650 +03:30 [INF] 2 servers were removed due to timeout
2020-03-04 03:24:04.658 +03:30 [INF] Server desktop-al52q8t:15448:750f3513 all the dispatchers started
2020-03-04 03:24:04.658 +03:30 [INF] Server desktop-al52q8t:15448:b81260c7 all the dispatchers started
2020-03-04 03:24:04.752 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-04 03:24:04.753 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-04 03:24:04.754 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-04 03:24:04.755 +03:30 [INF] Hosting environment: Development
2020-03-04 03:24:04.756 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-04 03:25:07.159 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product  
2020-03-04 03:25:07.429 +03:30 [INF] Successfully validated the token.
2020-03-04 03:25:07.437 +03:30 [INF] Authorization was successful.
2020-03-04 03:25:07.439 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:25:07.464 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-04 03:25:08.004 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-04 03:25:08.468 +03:30 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-04 03:25:08.520 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-04 03:25:08.547 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 1074.6617ms
2020-03-04 03:25:08.550 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-04 03:25:08.563 +03:30 [INF] Request finished in 1404.0239000000001ms 200 application/json; charset=utf-8
2020-03-04 03:29:04.655 +03:30 [INF] 12 servers were removed due to timeout
