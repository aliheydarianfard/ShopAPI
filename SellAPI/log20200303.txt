2020-03-03 02:02:59.765 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 02:03:00.797 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 02:03:00.898 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 02:03:00.900 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 02:03:00.902 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 02:03:00.961 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 02:03:00.963 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 02:03:00.964 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 02:03:01.615 +03:30 [INF] Server desktop-al52q8t:9532:72026b72 successfully announced in 662/1151 ms
2020-03-03 02:03:01.618 +03:30 [INF] Server desktop-al52q8t:9532:eb8bc1ff successfully announced in 642/0453 ms
2020-03-03 02:03:01.625 +03:30 [INF] Server desktop-al52q8t:9532:72026b72 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 02:03:01.662 +03:30 [INF] Server desktop-al52q8t:9532:eb8bc1ff is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 02:03:01.730 +03:30 [INF] 2 servers were removed due to timeout
2020-03-03 02:03:02.737 +03:30 [INF] Server desktop-al52q8t:9532:72026b72 all the dispatchers started
2020-03-03 02:03:02.860 +03:30 [INF] Server desktop-al52q8t:9532:eb8bc1ff all the dispatchers started
2020-03-03 02:03:04.331 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 02:03:04.336 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 02:03:04.337 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 02:03:04.338 +03:30 [INF] Hosting environment: Development
2020-03-03 02:03:04.339 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 02:03:07.023 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 02:03:07.458 +03:30 [INF] Request finished in 332.7216ms 404 
2020-03-03 02:04:22.981 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 02:04:22.990 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 02:04:23.022 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 02:04:23.123 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 02:04:24.262 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 02:04:25.437 +03:30 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[ID], [c].[Name], [c].[Description], [c].[CreateOn], [c].[UpdateOn]
FROM [Category] AS [c]
2020-03-03 02:04:25.517 +03:30 [INF] Executed action method SellAPI.Controllers.CategoryController.GetAll (SellAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2385.5837ms.
2020-03-03 02:04:25.527 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Category.CategoryItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-03 02:04:25.639 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 2610.2539ms
2020-03-03 02:04:25.653 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 02:04:25.662 +03:30 [INF] Request finished in 2680.4057000000003ms 200 application/json; charset=utf-8
2020-03-03 02:25:07.715 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 02:25:07.729 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 02:25:07.731 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 02:25:07.776 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 02:25:07.826 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[ID], [c].[Name], [c].[Description], [c].[CreateOn], [c].[UpdateOn]
FROM [Category] AS [c]
2020-03-03 02:25:07.831 +03:30 [INF] Executed action method SellAPI.Controllers.CategoryController.GetAll (SellAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 41.4037ms.
2020-03-03 02:25:07.833 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Category.CategoryItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-03 02:25:07.835 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 100.4081ms
2020-03-03 02:25:07.850 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 02:25:07.880 +03:30 [INF] Request finished in 149.5224ms 200 application/json; charset=utf-8
2020-03-03 02:27:04.002 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 02:27:04.455 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 02:27:04.493 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 02:27:04.495 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 02:27:04.496 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 02:27:04.511 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 02:27:04.514 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 02:27:04.515 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 02:27:04.760 +03:30 [INF] Server desktop-al52q8t:8948:851f74a1 successfully announced in 253/2878 ms
2020-03-03 02:27:04.760 +03:30 [INF] Server desktop-al52q8t:8948:3071bc0d successfully announced in 243/82180000000002 ms
2020-03-03 02:27:04.765 +03:30 [INF] Server desktop-al52q8t:8948:3071bc0d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 02:27:04.765 +03:30 [INF] Server desktop-al52q8t:8948:851f74a1 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 02:27:04.777 +03:30 [INF] Server desktop-al52q8t:8948:3071bc0d all the dispatchers started
2020-03-03 02:27:04.779 +03:30 [INF] Server desktop-al52q8t:8948:851f74a1 all the dispatchers started
2020-03-03 02:27:05.086 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 02:27:05.089 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 02:27:05.090 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 02:27:05.091 +03:30 [INF] Hosting environment: Development
2020-03-03 02:27:05.092 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 02:30:50.695 +03:30 [INF] Server desktop-al52q8t:8948:3071bc0d caught stopping signal...
2020-03-03 02:30:50.698 +03:30 [INF] Application is shutting down...
2020-03-03 02:30:50.698 +03:30 [INF] Server desktop-al52q8t:8948:3071bc0d caught stopped signal...
2020-03-03 02:30:50.703 +03:30 [INF] Server desktop-al52q8t:8948:851f74a1 caught stopping signal...
2020-03-03 02:30:50.706 +03:30 [INF] Server desktop-al52q8t:8948:851f74a1 caught stopped signal...
2020-03-03 02:30:51.704 +03:30 [INF] Server desktop-al52q8t:8948:851f74a1 All dispatchers stopped
2020-03-03 02:30:51.724 +03:30 [INF] Server desktop-al52q8t:8948:851f74a1 successfully reported itself as stopped in 8/8297 ms
2020-03-03 02:30:51.729 +03:30 [INF] Server desktop-al52q8t:8948:851f74a1 has been stopped in total 1022/6226 ms
2020-03-03 02:30:52.370 +03:30 [INF] Server desktop-al52q8t:8948:3071bc0d All dispatchers stopped
2020-03-03 02:30:52.375 +03:30 [INF] Server desktop-al52q8t:8948:3071bc0d successfully reported itself as stopped in 1/7837 ms
2020-03-03 02:30:52.377 +03:30 [INF] Server desktop-al52q8t:8948:3071bc0d has been stopped in total 1678/9081 ms
2020-03-03 14:00:22.577 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:00:23.443 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:00:23.524 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:00:23.525 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:00:23.527 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:00:23.566 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:00:23.567 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:00:23.568 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:00:24.090 +03:30 [INF] Server desktop-al52q8t:3696:d7bfa01a successfully announced in 511/04330000000004 ms
2020-03-03 14:00:24.090 +03:30 [INF] Server desktop-al52q8t:3696:675741b0 successfully announced in 533/0931 ms
2020-03-03 14:00:24.116 +03:30 [INF] Server desktop-al52q8t:3696:675741b0 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:00:24.116 +03:30 [INF] Server desktop-al52q8t:3696:d7bfa01a is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:00:24.206 +03:30 [INF] 2 servers were removed due to timeout
2020-03-03 14:00:24.851 +03:30 [INF] Server desktop-al52q8t:3696:675741b0 all the dispatchers started
2020-03-03 14:00:24.939 +03:30 [INF] Server desktop-al52q8t:3696:d7bfa01a all the dispatchers started
2020-03-03 14:00:26.606 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:00:26.608 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:00:26.610 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:00:26.611 +03:30 [INF] Hosting environment: Development
2020-03-03 14:00:26.612 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:00:28.609 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:00:28.702 +03:30 [INF] Request finished in 93.8876ms 404 
2020-03-03 14:00:28.753 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:00:28.755 +03:30 [INF] Request finished in 1.9811ms 0 
2020-03-03 14:00:36.978 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:00:36.989 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:00:37.036 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:00:37.564 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:00:45.334 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:00:49.515 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 12470.706100000001ms
2020-03-03 14:00:49.522 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:00:49.530 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 39
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 41
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:00:49.770 +03:30 [INF] Request finished in 12791.849600000001ms 500 text/plain
2020-03-03 14:01:31.852 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:01:32.263 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:01:32.313 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:01:32.316 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:01:32.317 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:01:32.350 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:01:32.351 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:01:32.353 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:01:32.703 +03:30 [INF] Server desktop-al52q8t:19488:ec98a0af successfully announced in 355/91450000000003 ms
2020-03-03 14:01:32.703 +03:30 [INF] Server desktop-al52q8t:19488:3699f411 successfully announced in 340/1274 ms
2020-03-03 14:01:32.728 +03:30 [INF] Server desktop-al52q8t:19488:ec98a0af is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:01:32.728 +03:30 [INF] Server desktop-al52q8t:19488:3699f411 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:01:33.183 +03:30 [INF] Server desktop-al52q8t:19488:ec98a0af all the dispatchers started
2020-03-03 14:01:33.288 +03:30 [INF] Server desktop-al52q8t:19488:3699f411 all the dispatchers started
2020-03-03 14:01:34.708 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:01:34.711 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:01:34.713 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:01:34.713 +03:30 [INF] Hosting environment: Development
2020-03-03 14:01:34.715 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:01:36.042 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:01:36.108 +03:30 [INF] Request finished in 67.1396ms 404 
2020-03-03 14:01:36.150 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:01:36.153 +03:30 [INF] Request finished in 2.8699000000000003ms 404 
2020-03-03 14:02:26.773 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:02:26.798 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:02:27.194 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:02:27.259 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:02:36.299 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:02:44.910 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 17704.3607ms
2020-03-03 14:02:44.919 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:02:44.928 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 39
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 41
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:02:45.054 +03:30 [INF] Request finished in 18281.1415ms 500 text/plain
2020-03-03 14:03:24.237 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:03:24.650 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:03:25.013 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:03:25.015 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:03:25.016 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:03:25.052 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:03:25.053 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:03:25.054 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:03:25.362 +03:30 [INF] Server desktop-al52q8t:8016:763184ba successfully announced in 316/1048 ms
2020-03-03 14:03:25.362 +03:30 [INF] Server desktop-al52q8t:8016:4036c578 successfully announced in 292/546 ms
2020-03-03 14:03:25.381 +03:30 [INF] Server desktop-al52q8t:8016:4036c578 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:03:25.381 +03:30 [INF] Server desktop-al52q8t:8016:763184ba is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:03:25.949 +03:30 [INF] Server desktop-al52q8t:8016:4036c578 all the dispatchers started
2020-03-03 14:03:26.029 +03:30 [INF] Server desktop-al52q8t:8016:763184ba all the dispatchers started
2020-03-03 14:03:27.461 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:03:27.464 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:03:27.466 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:03:27.467 +03:30 [INF] Hosting environment: Development
2020-03-03 14:03:27.468 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:03:28.770 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:03:28.820 +03:30 [INF] Request finished in 50.1627ms 404 
2020-03-03 14:03:28.870 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:03:28.873 +03:30 [INF] Request finished in 2.9717000000000002ms 404 
2020-03-03 14:03:31.055 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:03:31.066 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:03:31.157 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:03:31.365 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:03:38.105 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:03:47.753 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 16559.4307ms
2020-03-03 14:03:47.761 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:03:47.766 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 39
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 41
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:03:47.892 +03:30 [INF] Request finished in 16837.7713ms 500 text/plain
2020-03-03 14:15:00.070 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:15:00.576 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:15:00.630 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:15:00.632 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:15:00.633 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:15:00.668 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:15:00.689 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:15:00.697 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:15:01.007 +03:30 [INF] Server desktop-al52q8t:13624:9d9c629e successfully announced in 349/47720000000004 ms
2020-03-03 14:15:01.007 +03:30 [INF] Server desktop-al52q8t:13624:76c5fa2d successfully announced in 301/10720000000003 ms
2020-03-03 14:15:01.020 +03:30 [INF] Server desktop-al52q8t:13624:76c5fa2d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:15:01.020 +03:30 [INF] Server desktop-al52q8t:13624:9d9c629e is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:15:01.124 +03:30 [INF] 6 servers were removed due to timeout
2020-03-03 14:15:01.550 +03:30 [INF] Server desktop-al52q8t:13624:76c5fa2d all the dispatchers started
2020-03-03 14:15:01.604 +03:30 [INF] Server desktop-al52q8t:13624:9d9c629e all the dispatchers started
2020-03-03 14:15:03.100 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:15:03.103 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:15:03.104 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:15:03.105 +03:30 [INF] Hosting environment: Development
2020-03-03 14:15:03.106 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:15:04.174 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:15:04.241 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:15:04.296 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:15:04.530 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:15:04.691 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:15:07.699 +03:30 [INF] Request finished in 3007.5078000000003ms 404 
2020-03-03 14:15:08.878 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:15:12.672 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 8366.792800000001ms
2020-03-03 14:15:12.678 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:15:12.685 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 39
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 42
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:15:12.791 +03:30 [INF] Request finished in 8618.9213ms 500 text/plain
2020-03-03 14:17:30.582 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:17:31.003 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:17:31.046 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:17:31.048 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:17:31.050 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:17:31.079 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:17:31.080 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:17:31.088 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:17:31.410 +03:30 [INF] Server desktop-al52q8t:12048:7d4c03c0 successfully announced in 310/2447 ms
2020-03-03 14:17:31.411 +03:30 [INF] Server desktop-al52q8t:12048:dee4dfb8 successfully announced in 338/0743 ms
2020-03-03 14:17:31.430 +03:30 [INF] Server desktop-al52q8t:12048:7d4c03c0 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:17:31.430 +03:30 [INF] Server desktop-al52q8t:12048:dee4dfb8 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:17:32.347 +03:30 [INF] Server desktop-al52q8t:12048:7d4c03c0 all the dispatchers started
2020-03-03 14:17:32.421 +03:30 [INF] Server desktop-al52q8t:12048:dee4dfb8 all the dispatchers started
2020-03-03 14:17:33.768 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:17:33.771 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:17:33.773 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:17:33.773 +03:30 [INF] Hosting environment: Development
2020-03-03 14:17:33.774 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:17:35.165 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:17:35.235 +03:30 [INF] Request finished in 72.4233ms 404 
2020-03-03 14:17:35.302 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:17:35.314 +03:30 [INF] Request finished in 11.7438ms 0 
2020-03-03 14:17:49.551 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:17:49.555 +03:30 [INF] Request finished in 4.4583ms 404 
2020-03-03 14:17:57.552 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:17:57.561 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:17:57.591 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:17:57.645 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:18:03.082 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:18:06.175 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 8575.6906ms
2020-03-03 14:18:06.183 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:18:06.193 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 39
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 42
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:18:06.316 +03:30 [INF] Request finished in 8763.8744ms 500 text/plain
2020-03-03 14:18:42.212 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:18:42.632 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:18:42.680 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:18:42.682 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:18:42.683 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:18:42.719 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:18:42.726 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:18:42.727 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:18:43.109 +03:30 [INF] Server desktop-al52q8t:10488:561adee5 successfully announced in 348/2465 ms
2020-03-03 14:18:43.109 +03:30 [INF] Server desktop-al52q8t:10488:b0e4e05e successfully announced in 403/73310000000004 ms
2020-03-03 14:18:43.129 +03:30 [INF] Server desktop-al52q8t:10488:561adee5 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:18:43.129 +03:30 [INF] Server desktop-al52q8t:10488:b0e4e05e is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:18:43.579 +03:30 [INF] Server desktop-al52q8t:10488:561adee5 all the dispatchers started
2020-03-03 14:18:43.825 +03:30 [INF] Server desktop-al52q8t:10488:b0e4e05e all the dispatchers started
2020-03-03 14:18:45.126 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:18:45.129 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:18:45.131 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:18:45.132 +03:30 [INF] Hosting environment: Development
2020-03-03 14:18:45.133 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:18:46.560 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:18:46.896 +03:30 [INF] Request finished in 337.5917ms 404 
2020-03-03 14:18:46.934 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:18:46.936 +03:30 [INF] Request finished in 1.4958ms 404 
2020-03-03 14:18:48.864 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:18:48.885 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:18:48.950 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:18:49.025 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:19:12.068 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:19:30.101 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 41142.2058ms
2020-03-03 14:19:30.109 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:19:30.118 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 39
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 42
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:19:30.233 +03:30 [INF] Request finished in 41369.4492ms 500 text/plain
2020-03-03 14:20:16.998 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:20:17.397 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:20:17.444 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:20:17.446 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:20:17.448 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:20:17.478 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:20:17.504 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:20:17.505 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:20:17.793 +03:30 [INF] Server desktop-al52q8t:13124:06b58e85 successfully announced in 277/58340000000004 ms
2020-03-03 14:20:17.793 +03:30 [INF] Server desktop-al52q8t:13124:b032acf0 successfully announced in 320/0874 ms
2020-03-03 14:20:17.813 +03:30 [INF] Server desktop-al52q8t:13124:06b58e85 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:20:17.813 +03:30 [INF] Server desktop-al52q8t:13124:b032acf0 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:20:18.267 +03:30 [INF] Server desktop-al52q8t:13124:06b58e85 all the dispatchers started
2020-03-03 14:20:18.398 +03:30 [INF] Server desktop-al52q8t:13124:b032acf0 all the dispatchers started
2020-03-03 14:20:19.735 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:20:19.738 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:20:19.739 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:20:19.740 +03:30 [INF] Hosting environment: Development
2020-03-03 14:20:19.741 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:20:21.207 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:20:21.287 +03:30 [INF] Request finished in 82.2262ms 404 
2020-03-03 14:20:21.354 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:20:21.369 +03:30 [INF] Request finished in 14.9228ms 404 
2020-03-03 14:20:46.659 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:20:47.073 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:20:47.124 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:20:47.126 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:20:47.126 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:20:47.156 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:20:47.157 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:20:47.166 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:20:47.509 +03:30 [INF] Server desktop-al52q8t:16992:cef5420f successfully announced in 358/0881 ms
2020-03-03 14:20:47.509 +03:30 [INF] Server desktop-al52q8t:16992:30524942 successfully announced in 332/728 ms
2020-03-03 14:20:47.526 +03:30 [INF] Server desktop-al52q8t:16992:30524942 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:20:47.526 +03:30 [INF] Server desktop-al52q8t:16992:cef5420f is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:20:47.876 +03:30 [INF] Server desktop-al52q8t:16992:30524942 all the dispatchers started
2020-03-03 14:20:48.175 +03:30 [INF] Server desktop-al52q8t:16992:cef5420f all the dispatchers started
2020-03-03 14:20:49.556 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:20:49.559 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:20:49.561 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:20:49.562 +03:30 [INF] Hosting environment: Development
2020-03-03 14:20:49.563 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:20:50.905 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:20:50.998 +03:30 [INF] Request finished in 95.24380000000001ms 404 
2020-03-03 14:21:09.130 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:21:09.151 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:21:09.220 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:21:09.362 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:21:27.084 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:21:41.522 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 32294.106300000003ms
2020-03-03 14:21:41.530 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:21:41.536 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: The SqlParameterCollection only accepts non-null SqlParameter type objects, not SqlParameter objects.
   at Microsoft.Data.SqlClient.SqlParameterCollection.ValidateType(Object value)
   at Microsoft.Data.SqlClient.SqlParameterCollection.Add(Object value)
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 41
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 48
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:21:41.648 +03:30 [INF] Request finished in 32517.8421ms 500 text/plain
2020-03-03 14:24:41.021 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:24:41.427 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:24:41.474 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:24:41.476 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:24:41.477 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:24:41.507 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:24:41.523 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:24:41.524 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:24:41.844 +03:30 [INF] Server desktop-al52q8t:14248:36100df2 successfully announced in 310/64730000000003 ms
2020-03-03 14:24:41.844 +03:30 [INF] Server desktop-al52q8t:14248:6dce5a87 successfully announced in 342/5512 ms
2020-03-03 14:24:41.861 +03:30 [INF] Server desktop-al52q8t:14248:36100df2 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:24:41.861 +03:30 [INF] Server desktop-al52q8t:14248:6dce5a87 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:24:41.929 +03:30 [INF] 6 servers were removed due to timeout
2020-03-03 14:24:42.285 +03:30 [INF] Server desktop-al52q8t:14248:36100df2 all the dispatchers started
2020-03-03 14:24:42.451 +03:30 [INF] Server desktop-al52q8t:14248:6dce5a87 all the dispatchers started
2020-03-03 14:24:43.713 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:24:43.716 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:24:43.717 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:24:43.718 +03:30 [INF] Hosting environment: Development
2020-03-03 14:24:43.719 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:24:44.980 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:24:45.051 +03:30 [INF] Request finished in 72.73010000000001ms 404 
2020-03-03 14:24:45.099 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:24:45.101 +03:30 [INF] Request finished in 2.0828ms 0 
2020-03-03 14:24:46.782 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:24:46.790 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:24:46.822 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:24:46.977 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:24:59.020 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:25:07.480 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 20648.8192ms
2020-03-03 14:25:07.490 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:25:07.496 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: The SqlParameterCollection only accepts non-null SqlParameter type objects, not SqlParameter objects.
   at Microsoft.Data.SqlClient.SqlParameterCollection.ValidateType(Object value)
   at Microsoft.Data.SqlClient.SqlParameterCollection.Add(Object value)
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 41
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 48
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:25:07.607 +03:30 [INF] Request finished in 20825.3309ms 500 text/plain
2020-03-03 14:26:07.495 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:26:07.973 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:26:08.014 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:26:08.015 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:26:08.016 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:26:08.046 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:26:08.048 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:26:08.056 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:26:08.377 +03:30 [INF] Server desktop-al52q8t:14984:e3461c16 successfully announced in 336/9719 ms
2020-03-03 14:26:08.377 +03:30 [INF] Server desktop-al52q8t:14984:3dc2a03c successfully announced in 312/4912 ms
2020-03-03 14:26:08.401 +03:30 [INF] Server desktop-al52q8t:14984:e3461c16 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:26:08.401 +03:30 [INF] Server desktop-al52q8t:14984:3dc2a03c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:26:08.445 +03:30 [INF] 2 servers were removed due to timeout
2020-03-03 14:26:09.006 +03:30 [INF] Server desktop-al52q8t:14984:3dc2a03c all the dispatchers started
2020-03-03 14:26:09.220 +03:30 [INF] Server desktop-al52q8t:14984:e3461c16 all the dispatchers started
2020-03-03 14:26:10.485 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:26:10.488 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:26:10.489 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:26:10.490 +03:30 [INF] Hosting environment: Development
2020-03-03 14:26:10.490 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:26:11.984 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:26:12.207 +03:30 [INF] Request finished in 241.5474ms 404 
2020-03-03 14:26:12.254 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:26:12.256 +03:30 [INF] Request finished in 1.7007ms 0 
2020-03-03 14:26:14.632 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:26:14.644 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:26:14.680 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:26:14.831 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:26:16.092 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:26:16.913 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 2216.0945ms
2020-03-03 14:26:16.928 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:26:16.968 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: The SqlParameterCollection only accepts non-null SqlParameter type objects, not SqlParameter objects.
   at Microsoft.Data.SqlClient.SqlParameterCollection.ValidateType(Object value)
   at Microsoft.Data.SqlClient.SqlParameterCollection.Add(Object value)
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 41
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 49
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:26:17.175 +03:30 [INF] Request finished in 2543.8265ms 500 text/plain
2020-03-03 14:28:45.306 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:28:45.718 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:28:45.763 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:28:45.765 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:28:45.766 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:28:45.793 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:28:45.802 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:28:45.803 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:28:46.109 +03:30 [INF] Server desktop-al52q8t:8616:e641cf08 successfully announced in 320/5991 ms
2020-03-03 14:28:46.109 +03:30 [INF] Server desktop-al52q8t:8616:fdf1b8d4 successfully announced in 292/7323 ms
2020-03-03 14:28:46.127 +03:30 [INF] Server desktop-al52q8t:8616:fdf1b8d4 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:28:46.127 +03:30 [INF] Server desktop-al52q8t:8616:e641cf08 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:28:46.546 +03:30 [INF] Server desktop-al52q8t:8616:fdf1b8d4 all the dispatchers started
2020-03-03 14:28:46.623 +03:30 [INF] Server desktop-al52q8t:8616:e641cf08 all the dispatchers started
2020-03-03 14:28:48.059 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:28:48.062 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:28:48.063 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:28:48.064 +03:30 [INF] Hosting environment: Development
2020-03-03 14:28:48.065 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:28:49.446 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:28:49.521 +03:30 [INF] Request finished in 76.584ms 404 
2020-03-03 14:28:49.575 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:28:49.578 +03:30 [INF] Request finished in 2.7667ms 0 
2020-03-03 14:28:54.336 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:28:54.346 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:28:54.386 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:28:54.536 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:28:55.691 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:28:56.571 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 2176.3096ms
2020-03-03 14:28:56.611 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:28:56.616 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: The SqlParameterCollection only accepts non-null SqlParameter type objects, not SqlParameter objects.
   at Microsoft.Data.SqlClient.SqlParameterCollection.ValidateType(Object value)
   at Microsoft.Data.SqlClient.SqlParameterCollection.Add(Object value)
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 41
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 49
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:28:56.756 +03:30 [INF] Request finished in 2395.7732ms 500 text/plain
2020-03-03 14:28:57.921 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:28:57.924 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:28:57.925 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:28:58.040 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:28:58.462 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 522.5059ms
2020-03-03 14:28:58.466 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:28:58.469 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: The SqlParameterCollection only accepts non-null SqlParameter type objects, not SqlParameter objects.
   at Microsoft.Data.SqlClient.SqlParameterCollection.ValidateType(Object value)
   at Microsoft.Data.SqlClient.SqlParameterCollection.Add(Object value)
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 41
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 49
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:28:58.487 +03:30 [INF] Request finished in 565.6687000000001ms 500 text/plain
2020-03-03 14:28:59.380 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:28:59.451 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:28:59.488 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:28:59.517 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:28:59.636 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 145.30960000000002ms
2020-03-03 14:28:59.639 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:28:59.640 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: The SqlParameterCollection only accepts non-null SqlParameter type objects, not SqlParameter objects.
   at Microsoft.Data.SqlClient.SqlParameterCollection.ValidateType(Object value)
   at Microsoft.Data.SqlClient.SqlParameterCollection.Add(Object value)
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 41
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 49
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:28:59.689 +03:30 [INF] Request finished in 321.8047ms 500 text/plain
2020-03-03 14:29:23.888 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:29:24.347 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:29:24.413 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:29:24.415 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:29:24.416 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:29:24.447 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:29:24.457 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:29:24.458 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:29:24.815 +03:30 [INF] Server desktop-al52q8t:16564:aa85a367 successfully announced in 374/8414 ms
2020-03-03 14:29:24.815 +03:30 [INF] Server desktop-al52q8t:16564:5629b651 successfully announced in 348/2036 ms
2020-03-03 14:29:24.833 +03:30 [INF] Server desktop-al52q8t:16564:5629b651 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:29:24.833 +03:30 [INF] Server desktop-al52q8t:16564:aa85a367 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:29:25.317 +03:30 [INF] Server desktop-al52q8t:16564:5629b651 all the dispatchers started
2020-03-03 14:29:25.360 +03:30 [INF] Server desktop-al52q8t:16564:aa85a367 all the dispatchers started
2020-03-03 14:29:26.827 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:29:26.830 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:29:26.832 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:29:26.832 +03:30 [INF] Hosting environment: Development
2020-03-03 14:29:26.833 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:29:28.048 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:29:28.126 +03:30 [INF] Request finished in 77.76530000000001ms 404 
2020-03-03 14:29:28.194 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:29:28.195 +03:30 [INF] Request finished in 1.6448ms 0 
2020-03-03 14:29:31.209 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:29:31.220 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:29:31.312 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:29:31.555 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:29:33.038 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:29:34.033 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 2712.9725000000003ms
2020-03-03 14:29:34.037 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:29:34.043 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: The SqlParameterCollection only accepts non-null SqlParameter type objects, not SqlParameter objects.
   at Microsoft.Data.SqlClient.SqlParameterCollection.ValidateType(Object value)
   at Microsoft.Data.SqlClient.SqlParameterCollection.Add(Object value)
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 41
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 50
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:29:34.160 +03:30 [INF] Request finished in 2950.7216000000003ms 500 text/plain
2020-03-03 14:30:00.665 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:30:01.094 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:30:01.141 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:30:01.144 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:30:01.144 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:30:01.173 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:30:01.174 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:30:01.182 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:30:01.514 +03:30 [INF] Server desktop-al52q8t:16048:dd944911 successfully announced in 321/7848 ms
2020-03-03 14:30:01.514 +03:30 [INF] Server desktop-al52q8t:16048:87c84c29 successfully announced in 346/4022 ms
2020-03-03 14:30:01.528 +03:30 [INF] Server desktop-al52q8t:16048:87c84c29 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:30:01.528 +03:30 [INF] Server desktop-al52q8t:16048:dd944911 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:30:01.608 +03:30 [INF] 2 servers were removed due to timeout
2020-03-03 14:30:02.042 +03:30 [INF] Server desktop-al52q8t:16048:87c84c29 all the dispatchers started
2020-03-03 14:30:02.116 +03:30 [INF] Server desktop-al52q8t:16048:dd944911 all the dispatchers started
2020-03-03 14:30:03.357 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:30:03.361 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:30:03.362 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:30:03.363 +03:30 [INF] Hosting environment: Development
2020-03-03 14:30:03.364 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:30:04.717 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:30:04.784 +03:30 [INF] Request finished in 68.2459ms 404 
2020-03-03 14:30:04.821 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:30:04.824 +03:30 [INF] Request finished in 2.7074000000000003ms 404 
2020-03-03 14:30:12.940 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:30:12.949 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:30:12.985 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:30:13.114 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:30:19.107 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:31:07.926 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 54932.6419ms
2020-03-03 14:31:07.934 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:31:07.941 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: The SqlParameterCollection only accepts non-null SqlParameter type objects, not SqlParameter objects.
   at Microsoft.Data.SqlClient.SqlParameterCollection.ValidateType(Object value)
   at Microsoft.Data.SqlClient.SqlParameterCollection.Add(Object value)
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 41
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 50
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:31:08.067 +03:30 [INF] Request finished in 55126.5313ms 500 text/plain
2020-03-03 14:35:01.647 +03:30 [INF] 8 servers were removed due to timeout
2020-03-03 14:35:15.899 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 14:35:16.325 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 14:35:16.382 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:35:16.383 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:35:16.384 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 14:35:16.420 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 14:35:16.421 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 14:35:16.422 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 14:35:16.739 +03:30 [INF] Server desktop-al52q8t:6976:faf953ea successfully announced in 301/53040000000004 ms
2020-03-03 14:35:16.739 +03:30 [INF] Server desktop-al52q8t:6976:779517a2 successfully announced in 323/24690000000004 ms
2020-03-03 14:35:16.764 +03:30 [INF] Server desktop-al52q8t:6976:779517a2 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:35:16.764 +03:30 [INF] Server desktop-al52q8t:6976:faf953ea is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 14:35:17.208 +03:30 [INF] Server desktop-al52q8t:6976:779517a2 all the dispatchers started
2020-03-03 14:35:17.226 +03:30 [INF] Server desktop-al52q8t:6976:faf953ea all the dispatchers started
2020-03-03 14:35:18.753 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 14:35:18.755 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 14:35:18.757 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 14:35:18.758 +03:30 [INF] Hosting environment: Development
2020-03-03 14:35:18.758 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 14:35:20.145 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 14:35:20.206 +03:30 [INF] Request finished in 60.552ms 404 
2020-03-03 14:35:20.275 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 14:35:20.277 +03:30 [INF] Request finished in 1.9241000000000001ms 404 
2020-03-03 14:35:26.872 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Category/  
2020-03-03 14:35:27.030 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:35:27.099 +03:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.CategoryController (SellAPI).
2020-03-03 14:35:27.187 +03:30 [INF] Executing action method SellAPI.Controllers.CategoryController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 14:35:30.726 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 14:35:40.169 +03:30 [INF] Executed action SellAPI.Controllers.CategoryController.GetAll (SellAPI) in 13060.7268ms
2020-03-03 14:35:40.177 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.CategoryController.GetAll (SellAPI)'
2020-03-03 14:35:40.184 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: The SqlParameterCollection only accepts non-null SqlParameter type objects, not SqlParameter objects.
   at Microsoft.Data.SqlClient.SqlParameterCollection.ValidateType(Object value)
   at Microsoft.Data.SqlClient.SqlParameterCollection.Add(Object value)
   at Sell.Data.SQLServerApplicationContext.RunSp[T](String StoreName, List`1 ListParamert) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\SQLServerApplicationContext.cs:line 41
   at Sell.Data.Repositores.EFRepository`1.RunFunctionDb[T](String functionName, List`1 paramters) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 134
   at Sell.Services.Catalog.Category.CategoryService.SearchAllCategoryAsync() in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Category\CategoryService.cs:line 50
   at SellAPI.Controllers.CategoryController.GetAll() in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\CategoryController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 14:35:40.307 +03:30 [INF] Request finished in 13434.506000000001ms 500 text/plain
2020-03-03 15:23:22.287 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 15:23:22.975 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 15:23:23.035 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 15:23:23.037 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 15:23:23.038 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 15:23:23.068 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 15:23:23.070 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 15:23:23.071 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 15:23:23.437 +03:30 [INF] Server desktop-al52q8t:14264:0ccb5db6 successfully announced in 375/0491 ms
2020-03-03 15:23:23.437 +03:30 [INF] Server desktop-al52q8t:14264:e1e07371 successfully announced in 357/045 ms
2020-03-03 15:23:23.460 +03:30 [INF] Server desktop-al52q8t:14264:0ccb5db6 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 15:23:23.460 +03:30 [INF] Server desktop-al52q8t:14264:e1e07371 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 15:23:23.600 +03:30 [INF] 4 servers were removed due to timeout
2020-03-03 15:23:23.915 +03:30 [INF] Server desktop-al52q8t:14264:0ccb5db6 all the dispatchers started
2020-03-03 15:23:24.019 +03:30 [INF] Server desktop-al52q8t:14264:e1e07371 all the dispatchers started
2020-03-03 15:23:25.665 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 15:23:25.668 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 15:23:25.669 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 15:23:25.671 +03:30 [INF] Hosting environment: Development
2020-03-03 15:23:25.672 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 15:23:26.769 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 15:23:26.826 +03:30 [INF] Request finished in 57.1079ms 404 
2020-03-03 15:23:26.902 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 15:23:26.903 +03:30 [INF] Request finished in 1.6974ms 0 
2020-03-03 15:28:02.327 +03:30 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/Picture multipart/form-data; boundary=--------------------------074123360923513965002683 18692
2020-03-03 15:28:02.393 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.PictureController.UploadAsync (SellAPI)'
2020-03-03 15:28:02.501 +03:30 [INF] Route matched with {action = "Upload", controller = "Picture"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UploadAsync(Shop.Service.DTOs.PictureUploadDTO) on controller SellAPI.Controllers.PictureController (SellAPI).
2020-03-03 15:28:02.693 +03:30 [INF] Executing action method SellAPI.Controllers.PictureController.UploadAsync (SellAPI) - Validation state: "Valid"
2020-03-03 15:28:39.744 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 15:28:40.839 +03:30 [ERR] Failed executing DbCommand (89ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Picture] ([CreateOn], [MimeType], [ProductID], [UpdateOn], [VirtualPath])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Picture]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
2020-03-03 15:28:41.275 +03:30 [ERR] An exception occurred in the database while saving changes for context type 'Sell.Data.SQLServerApplicationContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_Picture_Product_ProductID". The conflict occurred in database "SellAPI", table "dbo.Product", column 'ID'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:66424dc8-c8e3-481c-99cf-5aedf17d0381
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_Picture_Product_ProductID". The conflict occurred in database "SellAPI", table "dbo.Product", column 'ID'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:66424dc8-c8e3-481c-99cf-5aedf17d0381
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2020-03-03 15:28:41.903 +03:30 [INF] Executed action SellAPI.Controllers.PictureController.UploadAsync (SellAPI) in 39392.7944ms
2020-03-03 15:28:41.907 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.PictureController.UploadAsync (SellAPI)'
2020-03-03 15:28:41.912 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_Picture_Product_ProductID". The conflict occurred in database "SellAPI", table "dbo.Product", column 'ID'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:66424dc8-c8e3-481c-99cf-5aedf17d0381
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Sell.Data.Repositores.EFRepository`1.InsertAsync(TEntity entity) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Data\Repositores\EFRepository.cs:line 110
   at Sell.Services.Catalog.Picture.PictureService.RegisterPictureAsync(PictureUploadDTO pictureUploadDTO) in C:\Users\AliHF\Source\Repos\SellAPI\Sell.Services\Catalog\Picture\PictureService.cs:line 27
   at SellAPI.Controllers.PictureController.UploadAsync(PictureUploadDTO image) in C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\Controllers\PictureController.cs:line 46
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 15:28:42.298 +03:30 [INF] Request finished in 39971.7097ms 500 text/plain
2020-03-03 15:29:37.287 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 15:29:37.784 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 15:29:37.835 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 15:29:37.836 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 15:29:37.837 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 15:29:37.868 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 15:29:37.868 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 15:29:37.875 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 15:29:38.211 +03:30 [INF] Server desktop-al52q8t:9148:90bf010a successfully announced in 328/0174 ms
2020-03-03 15:29:38.211 +03:30 [INF] Server desktop-al52q8t:9148:7af91f42 successfully announced in 349/6028 ms
2020-03-03 15:29:38.229 +03:30 [INF] Server desktop-al52q8t:9148:90bf010a is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 15:29:38.229 +03:30 [INF] Server desktop-al52q8t:9148:7af91f42 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 15:29:39.289 +03:30 [INF] Server desktop-al52q8t:9148:90bf010a all the dispatchers started
2020-03-03 15:29:39.315 +03:30 [INF] Server desktop-al52q8t:9148:7af91f42 all the dispatchers started
2020-03-03 15:29:40.696 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 15:29:40.697 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 15:29:40.699 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 15:29:40.699 +03:30 [INF] Hosting environment: Development
2020-03-03 15:29:40.700 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 15:29:41.110 +03:30 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/Picture multipart/form-data; boundary=--------------------------094344725808674344671006 18692
2020-03-03 15:29:41.817 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.PictureController.UploadAsync (SellAPI)'
2020-03-03 15:29:41.832 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 15:29:41.898 +03:30 [INF] Request finished in 65.1396ms 404 
2020-03-03 15:29:41.928 +03:30 [INF] Route matched with {action = "Upload", controller = "Picture"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UploadAsync(Shop.Service.DTOs.PictureUploadDTO) on controller SellAPI.Controllers.PictureController (SellAPI).
2020-03-03 15:29:42.142 +03:30 [INF] Executing action method SellAPI.Controllers.PictureController.UploadAsync (SellAPI) - Validation state: "Valid"
2020-03-03 15:29:49.302 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 15:29:50.399 +03:30 [INF] Executed DbCommand (62ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Picture] ([CreateOn], [MimeType], [ProductID], [UpdateOn], [VirtualPath])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Picture]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
2020-03-03 15:30:04.564 +03:30 [INF] Executed DbCommand (21ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Picture] SET [CreateOn] = @p0, [MimeType] = @p1, [ProductID] = @p2, [UpdateOn] = @p3, [VirtualPath] = @p4
WHERE [ID] = @p5;
SELECT @@ROWCOUNT;
2020-03-03 15:30:14.541 +03:30 [INF] Executed action method SellAPI.Controllers.PictureController.UploadAsync (SellAPI), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 32378.0217ms.
2020-03-03 15:30:14.551 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Int32'.
2020-03-03 15:30:14.655 +03:30 [INF] Executed action SellAPI.Controllers.PictureController.UploadAsync (SellAPI) in 32719.023200000003ms
2020-03-03 15:30:14.659 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.PictureController.UploadAsync (SellAPI)'
2020-03-03 15:30:14.670 +03:30 [INF] Request finished in 33560.758200000004ms 201 application/json; charset=utf-8
2020-03-03 15:31:13.582 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Picture/2  
2020-03-03 15:31:13.585 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.PictureController.Get (SellAPI)'
2020-03-03 15:31:13.591 +03:30 [INF] Route matched with {action = "Get", controller = "Picture"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.Nullable`1[System.Int32]) on controller SellAPI.Controllers.PictureController (SellAPI).
2020-03-03 15:31:13.656 +03:30 [INF] Executing action method SellAPI.Controllers.PictureController.Get (SellAPI) - Validation state: "Valid"
2020-03-03 15:31:14.243 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[CreateOn], [p].[MimeType], [p].[ProductID], [p].[UpdateOn], [p].[VirtualPath]
FROM [Picture] AS [p]
WHERE [p].[ID] = @__p_0
2020-03-03 15:31:14.327 +03:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[CreateOn], [p].[MimeType], [p].[ProductID], [p].[UpdateOn], [p].[VirtualPath]
FROM [Picture] AS [p]
WHERE [p].[ID] = @__p_0
2020-03-03 15:31:14.345 +03:30 [INF] Executed action method SellAPI.Controllers.PictureController.Get (SellAPI), returned result Microsoft.AspNetCore.Mvc.PhysicalFileResult in 675.0998000000001ms.
2020-03-03 15:31:14.364 +03:30 [INF] Executing Microsoft.AspNetCore.Mvc.PhysicalFileResult, sending file 'C:\Users\AliHF\Source\Repos\SellAPI\SellAPI\wwwroot\PImages\0000002_0.png' with download name '' ...
2020-03-03 15:31:14.379 +03:30 [INF] Executed action SellAPI.Controllers.PictureController.Get (SellAPI) in 780.9079ms
2020-03-03 15:31:14.381 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.PictureController.Get (SellAPI)'
2020-03-03 15:31:14.435 +03:30 [INF] Request finished in 852.9638ms 200 image/png
2020-03-03 15:55:27.384 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 15:55:27.889 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 15:55:27.983 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 15:55:28.009 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 15:55:28.011 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 15:55:28.012 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 15:55:28.172 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 15:55:28.173 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 15:55:28.173 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 15:55:28.411 +03:30 [INF] Server desktop-al52q8t:13300:9476307a successfully announced in 364/6435 ms
2020-03-03 15:55:28.411 +03:30 [INF] Server desktop-al52q8t:13300:4b0f5269 successfully announced in 229/21630000000002 ms
2020-03-03 15:55:28.429 +03:30 [INF] Server desktop-al52q8t:13300:4b0f5269 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 15:55:28.429 +03:30 [INF] Server desktop-al52q8t:13300:9476307a is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 15:55:28.530 +03:30 [INF] 4 servers were removed due to timeout
2020-03-03 15:55:29.204 +03:30 [INF] Server desktop-al52q8t:13300:4b0f5269 all the dispatchers started
2020-03-03 15:55:29.355 +03:30 [INF] Server desktop-al52q8t:13300:9476307a all the dispatchers started
2020-03-03 15:55:30.600 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 15:55:30.605 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 15:55:30.609 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 15:55:30.610 +03:30 [INF] Hosting environment: Development
2020-03-03 15:55:30.612 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 15:55:31.671 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 15:55:32.065 +03:30 [INF] Request finished in 396.8032ms 404 
2020-03-03 15:55:38.984 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 15:55:38.997 +03:30 [INF] Authorization failed.
2020-03-03 15:55:39.005 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-03 15:55:39.017 +03:30 [INF] Request finished in 33.1963ms 401 
2020-03-03 16:16:33.380 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:16:33.824 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:16:33.886 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:16:33.914 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:16:33.917 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:16:33.918 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:16:34.031 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:16:34.032 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:16:34.033 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:16:34.288 +03:30 [INF] Server desktop-al52q8t:872:0519e010 successfully announced in 245/7117 ms
2020-03-03 16:16:34.288 +03:30 [INF] Server desktop-al52q8t:872:92d3d1ca successfully announced in 345/9152 ms
2020-03-03 16:16:34.308 +03:30 [INF] Server desktop-al52q8t:872:92d3d1ca is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:16:34.308 +03:30 [INF] Server desktop-al52q8t:872:0519e010 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:16:34.381 +03:30 [INF] 2 servers were removed due to timeout
2020-03-03 16:16:34.806 +03:30 [INF] Server desktop-al52q8t:872:92d3d1ca all the dispatchers started
2020-03-03 16:16:34.806 +03:30 [INF] Server desktop-al52q8t:872:0519e010 all the dispatchers started
2020-03-03 16:16:36.327 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:16:36.329 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:16:36.331 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:16:36.333 +03:30 [INF] Hosting environment: Development
2020-03-03 16:16:36.335 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:16:37.616 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:16:37.741 +03:30 [INF] Request finished in 127.09580000000001ms 404 
2020-03-03 16:20:04.291 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:20:04.796 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:20:04.858 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:20:04.893 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:20:04.895 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:20:04.896 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:20:05.032 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:20:05.033 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:20:05.041 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:20:05.318 +03:30 [INF] Server desktop-al52q8t:5112:a4601ee6 successfully announced in 394/4692 ms
2020-03-03 16:20:05.318 +03:30 [INF] Server desktop-al52q8t:5112:2a59dc44 successfully announced in 265/7443 ms
2020-03-03 16:20:05.337 +03:30 [INF] Server desktop-al52q8t:5112:2a59dc44 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:20:05.337 +03:30 [INF] Server desktop-al52q8t:5112:a4601ee6 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:20:06.336 +03:30 [INF] Server desktop-al52q8t:5112:2a59dc44 all the dispatchers started
2020-03-03 16:20:06.512 +03:30 [INF] Server desktop-al52q8t:5112:a4601ee6 all the dispatchers started
2020-03-03 16:20:07.655 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:20:07.656 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:20:07.657 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:20:07.658 +03:30 [INF] Hosting environment: Development
2020-03-03 16:20:07.659 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:20:08.931 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:20:09.070 +03:30 [INF] Request finished in 140.9845ms 404 
2020-03-03 16:21:33.609 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:21:33.622 +03:30 [INF] Authorization failed.
2020-03-03 16:21:33.653 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-03 16:21:33.720 +03:30 [INF] Request finished in 111.1264ms 401 
2020-03-03 16:21:43.648 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:21:44.818 +03:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException: IDX10214: Audience validation failed. Audiences: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidAudience: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidAudiences: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateAudience(IEnumerable`1 audiences, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateAudience(IEnumerable`1 audiences, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-03 16:21:45.238 +03:30 [INF] Bearer was not authenticated. Failure message: IDX10214: Audience validation failed. Audiences: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidAudience: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidAudiences: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-03 16:21:45.242 +03:30 [INF] Authorization failed.
2020-03-03 16:21:45.246 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-03 16:21:45.251 +03:30 [INF] Request finished in 1602.645ms 401 
2020-03-03 16:21:46.647 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:21:46.656 +03:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException: IDX10214: Audience validation failed. Audiences: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidAudience: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidAudiences: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateAudience(IEnumerable`1 audiences, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateAudience(IEnumerable`1 audiences, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-03 16:21:46.661 +03:30 [INF] Bearer was not authenticated. Failure message: IDX10214: Audience validation failed. Audiences: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidAudience: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidAudiences: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-03 16:21:46.665 +03:30 [INF] Authorization failed.
2020-03-03 16:21:46.666 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-03 16:21:46.668 +03:30 [INF] Request finished in 23.584600000000002ms 401 
2020-03-03 16:22:14.691 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:22:15.136 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:22:15.203 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:22:15.228 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:22:15.229 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:22:15.230 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:22:15.335 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:22:15.344 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:22:15.345 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:22:15.584 +03:30 [INF] Server desktop-al52q8t:7920:07bdfcc3 successfully announced in 228/5995 ms
2020-03-03 16:22:15.584 +03:30 [INF] Server desktop-al52q8t:7920:62851d26 successfully announced in 328/80060000000003 ms
2020-03-03 16:22:15.603 +03:30 [INF] Server desktop-al52q8t:7920:62851d26 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:22:15.603 +03:30 [INF] Server desktop-al52q8t:7920:07bdfcc3 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:22:16.036 +03:30 [INF] Server desktop-al52q8t:7920:07bdfcc3 all the dispatchers started
2020-03-03 16:22:16.100 +03:30 [INF] Server desktop-al52q8t:7920:62851d26 all the dispatchers started
2020-03-03 16:22:17.560 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:22:17.562 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:22:17.564 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:22:17.566 +03:30 [INF] Hosting environment: Development
2020-03-03 16:22:17.568 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:22:18.632 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:22:18.750 +03:30 [INF] Request finished in 118.4658ms 404 
2020-03-03 16:22:43.616 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:22:44.625 +03:30 [INF] Successfully validated the token.
2020-03-03 16:22:44.634 +03:30 [INF] Authorization was successful.
2020-03-03 16:22:44.650 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:22:44.714 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 16:22:44.846 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 16:22:46.141 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 16:22:47.546 +03:30 [INF] Executed DbCommand (110ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-03 16:22:47.668 +03:30 [INF] Executed action method SellAPI.Controllers.ProductController.GetAll (SellAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2799.837ms.
2020-03-03 16:22:47.679 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-03 16:22:47.730 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 3008.2524000000003ms
2020-03-03 16:22:47.732 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:22:47.783 +03:30 [INF] Request finished in 4167.3037ms 200 application/json; charset=utf-8
2020-03-03 16:27:15.733 +03:30 [INF] 4 servers were removed due to timeout
2020-03-03 16:28:30.694 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:28:31.142 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:28:31.193 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:28:31.221 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:28:31.223 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:28:31.224 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:28:31.353 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:28:31.354 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:28:31.355 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:28:31.652 +03:30 [INF] Server desktop-al52q8t:1824:64f99a5e successfully announced in 404/05440000000004 ms
2020-03-03 16:28:31.652 +03:30 [INF] Server desktop-al52q8t:1824:19308858 successfully announced in 285/94370000000004 ms
2020-03-03 16:28:31.670 +03:30 [INF] Server desktop-al52q8t:1824:64f99a5e is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:28:31.670 +03:30 [INF] Server desktop-al52q8t:1824:19308858 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:28:32.281 +03:30 [INF] Server desktop-al52q8t:1824:64f99a5e all the dispatchers started
2020-03-03 16:28:32.401 +03:30 [INF] Server desktop-al52q8t:1824:19308858 all the dispatchers started
2020-03-03 16:28:33.781 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:28:33.782 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:28:33.784 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:28:33.786 +03:30 [INF] Hosting environment: Development
2020-03-03 16:28:33.788 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:28:34.943 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:28:35.072 +03:30 [INF] Request finished in 129.3658ms 404 
2020-03-03 16:28:36.903 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:28:38.103 +03:30 [INF] Successfully validated the token.
2020-03-03 16:28:38.112 +03:30 [INF] Authorization was successful.
2020-03-03 16:28:38.114 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:28:38.142 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 16:28:38.218 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 16:32:10.821 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:32:11.265 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:32:11.325 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:32:11.351 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:32:11.353 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:32:11.354 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:32:11.454 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:32:11.456 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:32:11.463 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:32:11.733 +03:30 [INF] Server desktop-al52q8t:5900:15fde75f successfully announced in 251/11520000000002 ms
2020-03-03 16:32:11.733 +03:30 [INF] Server desktop-al52q8t:5900:e5f94b25 successfully announced in 353/3175 ms
2020-03-03 16:32:11.754 +03:30 [INF] Server desktop-al52q8t:5900:e5f94b25 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:32:11.754 +03:30 [INF] Server desktop-al52q8t:5900:15fde75f is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:32:12.159 +03:30 [INF] Server desktop-al52q8t:5900:e5f94b25 all the dispatchers started
2020-03-03 16:32:12.297 +03:30 [INF] Server desktop-al52q8t:5900:15fde75f all the dispatchers started
2020-03-03 16:32:13.735 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:32:13.736 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:32:13.739 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:32:13.740 +03:30 [INF] Hosting environment: Development
2020-03-03 16:32:13.742 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:32:14.676 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:32:14.795 +03:30 [INF] Request finished in 119.4445ms 404 
2020-03-03 16:32:28.416 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:32:29.911 +03:30 [INF] Successfully validated the token.
2020-03-03 16:32:29.958 +03:30 [INF] Authorization was successful.
2020-03-03 16:32:29.983 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:32:30.132 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 16:32:30.215 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 16:33:14.244 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:33:14.675 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:33:14.745 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:33:14.771 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:33:14.772 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:33:14.773 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:33:14.895 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:33:14.896 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:33:14.896 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:33:15.164 +03:30 [INF] Server desktop-al52q8t:4416:34d90aee successfully announced in 359/11920000000003 ms
2020-03-03 16:33:15.164 +03:30 [INF] Server desktop-al52q8t:4416:4acaaf40 successfully announced in 246/5591 ms
2020-03-03 16:33:15.188 +03:30 [INF] Server desktop-al52q8t:4416:34d90aee is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:33:15.188 +03:30 [INF] Server desktop-al52q8t:4416:4acaaf40 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:33:15.298 +03:30 [INF] 2 servers were removed due to timeout
2020-03-03 16:33:15.775 +03:30 [INF] Server desktop-al52q8t:4416:34d90aee all the dispatchers started
2020-03-03 16:33:15.802 +03:30 [INF] Server desktop-al52q8t:4416:4acaaf40 all the dispatchers started
2020-03-03 16:33:17.341 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:33:17.342 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:33:17.344 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:33:17.346 +03:30 [INF] Hosting environment: Development
2020-03-03 16:33:17.348 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:33:18.461 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:33:18.625 +03:30 [INF] Request finished in 163.2502ms 404 
2020-03-03 16:33:26.389 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:33:27.436 +03:30 [INF] Successfully validated the token.
2020-03-03 16:33:27.444 +03:30 [INF] Authorization was successful.
2020-03-03 16:33:27.447 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:33:27.475 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 16:33:27.563 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 16:34:32.174 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:34:32.680 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:34:32.745 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:34:32.769 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:34:32.770 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:34:32.772 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:34:32.878 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:34:32.884 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:34:32.885 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:34:33.130 +03:30 [INF] Server desktop-al52q8t:10852:80c68a1b successfully announced in 327/58250000000004 ms
2020-03-03 16:34:33.131 +03:30 [INF] Server desktop-al52q8t:10852:d92c2832 successfully announced in 236/37550000000002 ms
2020-03-03 16:34:33.150 +03:30 [INF] Server desktop-al52q8t:10852:d92c2832 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:34:33.150 +03:30 [INF] Server desktop-al52q8t:10852:80c68a1b is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:34:33.217 +03:30 [INF] 2 servers were removed due to timeout
2020-03-03 16:34:33.712 +03:30 [INF] Server desktop-al52q8t:10852:d92c2832 all the dispatchers started
2020-03-03 16:34:33.856 +03:30 [INF] Server desktop-al52q8t:10852:80c68a1b all the dispatchers started
2020-03-03 16:34:35.224 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:34:35.226 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:34:35.227 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:34:35.229 +03:30 [INF] Hosting environment: Development
2020-03-03 16:34:35.231 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:34:36.371 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:34:36.497 +03:30 [INF] Request finished in 127.15320000000001ms 404 
2020-03-03 16:34:48.778 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:34:50.456 +03:30 [INF] Failed to validate the token.
System.ArgumentException: IDX12729: Unable to decode the header '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' as Base64Url encoded string. jwtEncodedString: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
 ---> Newtonsoft.Json.JsonReaderException: After parsing a value an unexpected character was encountered: -. Path 'kid', line 1, position 45.
   at Newtonsoft.Json.JsonTextReader.ParsePostValue(Boolean ignoreComments)
   at Newtonsoft.Json.JsonTextReader.Read()
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(IDictionary dictionary, JsonReader reader, JsonDictionaryContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type)
   at System.IdentityModel.Tokens.Jwt.JsonExtensions.DeserializeJwtHeader(String jsonString)
   at System.IdentityModel.Tokens.Jwt.JwtHeader.Base64UrlDeserialize(String base64UrlEncodedJsonString)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Decode(String[] tokenParts, String rawData)
   --- End of inner exception stack trace ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Decode(String[] tokenParts, String rawData)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ReadJwtToken(String token)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-03 16:34:50.541 +03:30 [INF] Bearer was not authenticated. Failure message: IDX12729: Unable to decode the header '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' as Base64Url encoded string. jwtEncodedString: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-03 16:34:50.549 +03:30 [INF] Authorization failed.
2020-03-03 16:34:50.558 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-03 16:34:50.573 +03:30 [INF] Request finished in 1795.4649000000002ms 401 
2020-03-03 16:34:53.922 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:34:53.970 +03:30 [INF] Successfully validated the token.
2020-03-03 16:34:53.973 +03:30 [INF] Authorization was successful.
2020-03-03 16:34:53.977 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:34:54.006 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 16:34:54.344 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 16:37:45.039 +03:30 [INF] Entity Framework Core 3.1.2 initialized 'SQLServerApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=16 
2020-03-03 16:37:46.105 +03:30 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[ProductName], [p].[ProductDescription], [p].[ProductLastPrice], [p].[ProductLastPourchFee], [p].[ProductLastSuply], [p].[ProductStartTime], [p].[ProductActive], [p].[CreateOn], [p].[UpdateOn], [p].[CategoryID], [c].[Name]
FROM [Product] AS [p]
INNER JOIN [Category] AS [c] ON [p].[CategoryID] = [c].[ID]
2020-03-03 16:37:46.152 +03:30 [INF] Executed action method SellAPI.Controllers.ProductController.GetAll (SellAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 171710.8352ms.
2020-03-03 16:37:46.162 +03:30 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Sell.Services.DTOs.Product.ProductItemDTO, Sell.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-03-03 16:37:46.188 +03:30 [INF] Executed action SellAPI.Controllers.ProductController.GetAll (SellAPI) in 172170.823ms
2020-03-03 16:37:46.192 +03:30 [INF] Executed endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:37:46.202 +03:30 [INF] Request finished in 172280.4954ms 200 application/json; charset=utf-8
2020-03-03 16:37:52.447 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:37:52.845 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:37:52.905 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:37:52.929 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:37:52.932 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:37:52.933 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:37:53.039 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:37:53.041 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:37:53.042 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:37:53.292 +03:30 [INF] Server desktop-al52q8t:13876:9d4793b1 successfully announced in 333/2045 ms
2020-03-03 16:37:53.293 +03:30 [INF] Server desktop-al52q8t:13876:72a52ce1 successfully announced in 243/12810000000002 ms
2020-03-03 16:37:53.312 +03:30 [INF] Server desktop-al52q8t:13876:9d4793b1 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:37:53.312 +03:30 [INF] Server desktop-al52q8t:13876:72a52ce1 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:37:53.423 +03:30 [INF] 2 servers were removed due to timeout
2020-03-03 16:37:53.729 +03:30 [INF] Server desktop-al52q8t:13876:72a52ce1 all the dispatchers started
2020-03-03 16:37:53.824 +03:30 [INF] Server desktop-al52q8t:13876:9d4793b1 all the dispatchers started
2020-03-03 16:37:55.238 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:37:55.241 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:37:55.243 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:37:55.245 +03:30 [INF] Hosting environment: Development
2020-03-03 16:37:55.247 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:37:56.500 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:37:56.632 +03:30 [INF] Request finished in 133.24880000000002ms 404 
2020-03-03 16:38:29.965 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:38:31.034 +03:30 [INF] Successfully validated the token.
2020-03-03 16:38:31.042 +03:30 [INF] Authorization was successful.
2020-03-03 16:38:31.044 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:38:31.162 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 16:38:31.283 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 16:39:06.345 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:39:06.833 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:39:06.893 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:39:06.919 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:39:06.921 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:39:06.922 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:39:07.029 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:39:07.031 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:39:07.032 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:39:07.314 +03:30 [INF] Server desktop-al52q8t:1492:9c504c3d successfully announced in 367/24 ms
2020-03-03 16:39:07.314 +03:30 [INF] Server desktop-al52q8t:1492:c335ad46 successfully announced in 272/24670000000003 ms
2020-03-03 16:39:07.333 +03:30 [INF] Server desktop-al52q8t:1492:9c504c3d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:39:07.333 +03:30 [INF] Server desktop-al52q8t:1492:c335ad46 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:39:07.409 +03:30 [INF] 2 servers were removed due to timeout
2020-03-03 16:39:07.839 +03:30 [INF] Server desktop-al52q8t:1492:9c504c3d all the dispatchers started
2020-03-03 16:39:07.851 +03:30 [INF] Server desktop-al52q8t:1492:c335ad46 all the dispatchers started
2020-03-03 16:39:09.305 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:39:09.306 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:39:09.308 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:39:09.309 +03:30 [INF] Hosting environment: Development
2020-03-03 16:39:09.310 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:39:10.352 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:39:10.480 +03:30 [INF] Request finished in 129.6304ms 404 
2020-03-03 16:39:27.514 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:39:28.632 +03:30 [INF] Successfully validated the token.
2020-03-03 16:39:28.641 +03:30 [INF] Authorization was successful.
2020-03-03 16:39:28.644 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:39:28.676 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 16:39:28.766 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 16:43:39.677 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:43:40.110 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:43:40.160 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:43:40.183 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:43:40.185 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:43:40.186 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:43:40.286 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:43:40.295 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:43:40.296 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:43:40.546 +03:30 [INF] Server desktop-al52q8t:6572:11e8b22c successfully announced in 336/2339 ms
2020-03-03 16:43:40.548 +03:30 [INF] Server desktop-al52q8t:6572:8ee9d8d8 successfully announced in 241/9858 ms
2020-03-03 16:43:40.566 +03:30 [INF] Server desktop-al52q8t:6572:8ee9d8d8 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:43:40.566 +03:30 [INF] Server desktop-al52q8t:6572:11e8b22c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:43:40.664 +03:30 [INF] 4 servers were removed due to timeout
2020-03-03 16:43:40.991 +03:30 [INF] Server desktop-al52q8t:6572:8ee9d8d8 all the dispatchers started
2020-03-03 16:43:41.237 +03:30 [INF] Server desktop-al52q8t:6572:11e8b22c all the dispatchers started
2020-03-03 16:43:42.539 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:43:42.541 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:43:42.543 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:43:42.544 +03:30 [INF] Hosting environment: Development
2020-03-03 16:43:42.547 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:43:43.611 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:43:43.611 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:43:43.799 +03:30 [INF] Request finished in 187.3569ms 404 
2020-03-03 16:43:44.807 +03:30 [INF] Successfully validated the token.
2020-03-03 16:43:44.816 +03:30 [INF] Authorization was successful.
2020-03-03 16:43:44.817 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:43:44.872 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 16:43:45.085 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 16:44:36.298 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:44:36.743 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:44:36.807 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:44:36.837 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:44:36.840 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:44:36.841 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:44:36.933 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:44:36.934 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:44:36.941 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:44:37.203 +03:30 [INF] Server desktop-al52q8t:20120:bf527434 successfully announced in 246/9291 ms
2020-03-03 16:44:37.210 +03:30 [INF] Server desktop-al52q8t:20120:be648017 successfully announced in 343/2121 ms
2020-03-03 16:44:37.217 +03:30 [INF] Server desktop-al52q8t:20120:bf527434 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:44:37.218 +03:30 [INF] Server desktop-al52q8t:20120:be648017 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:44:37.286 +03:30 [INF] 2 servers were removed due to timeout
2020-03-03 16:44:37.784 +03:30 [INF] Server desktop-al52q8t:20120:bf527434 all the dispatchers started
2020-03-03 16:44:37.840 +03:30 [INF] Server desktop-al52q8t:20120:be648017 all the dispatchers started
2020-03-03 16:44:39.228 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:44:39.230 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:44:39.232 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:44:39.234 +03:30 [INF] Hosting environment: Development
2020-03-03 16:44:39.235 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:44:40.320 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:44:40.469 +03:30 [INF] Request finished in 148.3745ms 404 
2020-03-03 16:44:51.570 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:44:52.613 +03:30 [INF] Successfully validated the token.
2020-03-03 16:44:52.623 +03:30 [INF] Authorization was successful.
2020-03-03 16:44:52.624 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:44:52.665 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 16:44:52.773 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 16:45:58.230 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 16:45:58.694 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 16:45:58.751 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 16:45:58.782 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:45:58.784 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:45:58.785 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 16:45:58.910 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 16:45:58.911 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 16:45:58.912 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 16:45:59.164 +03:30 [INF] Server desktop-al52q8t:21668:9be193f7 successfully announced in 352/6961 ms
2020-03-03 16:45:59.164 +03:30 [INF] Server desktop-al52q8t:21668:f8721e8a successfully announced in 242/6689 ms
2020-03-03 16:45:59.177 +03:30 [INF] Server desktop-al52q8t:21668:f8721e8a is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:45:59.177 +03:30 [INF] Server desktop-al52q8t:21668:9be193f7 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 16:45:59.659 +03:30 [INF] Server desktop-al52q8t:21668:f8721e8a all the dispatchers started
2020-03-03 16:45:59.840 +03:30 [INF] Server desktop-al52q8t:21668:9be193f7 all the dispatchers started
2020-03-03 16:46:01.144 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 16:46:01.145 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 16:46:01.147 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 16:46:01.148 +03:30 [INF] Hosting environment: Development
2020-03-03 16:46:01.150 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 16:46:02.162 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 16:46:02.292 +03:30 [INF] Request finished in 131.3864ms 404 
2020-03-03 16:46:17.424 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 16:46:18.470 +03:30 [INF] Successfully validated the token.
2020-03-03 16:46:18.480 +03:30 [INF] Authorization was successful.
2020-03-03 16:46:18.482 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 16:46:18.512 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 16:46:18.604 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 17:26:08.002 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 17:26:08.441 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 17:26:08.496 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 17:26:08.520 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 17:26:08.522 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 17:26:08.523 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 17:26:08.639 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 17:26:08.640 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 17:26:08.642 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 17:26:08.890 +03:30 [INF] Server desktop-al52q8t:22716:5df51636 successfully announced in 339/5713 ms
2020-03-03 17:26:08.890 +03:30 [INF] Server desktop-al52q8t:22716:7a8a8e46 successfully announced in 238/9489 ms
2020-03-03 17:26:08.908 +03:30 [INF] Server desktop-al52q8t:22716:5df51636 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 17:26:08.908 +03:30 [INF] Server desktop-al52q8t:22716:7a8a8e46 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 17:26:09.010 +03:30 [INF] 6 servers were removed due to timeout
2020-03-03 17:26:09.438 +03:30 [INF] Server desktop-al52q8t:22716:5df51636 all the dispatchers started
2020-03-03 17:26:09.499 +03:30 [INF] Server desktop-al52q8t:22716:7a8a8e46 all the dispatchers started
2020-03-03 17:26:10.894 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 17:26:10.895 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 17:26:10.896 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 17:26:10.898 +03:30 [INF] Hosting environment: Development
2020-03-03 17:26:10.899 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 17:26:11.970 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 17:26:12.101 +03:30 [INF] Request finished in 132.8979ms 404 
2020-03-03 17:26:12.135 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 17:26:12.147 +03:30 [INF] Request finished in 2.7348000000000003ms 0 
2020-03-03 17:26:28.312 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 17:26:30.659 +03:30 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-03 17:26:30.729 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-03-03 17:26:30.878 +03:30 [INF] Request finished in 2566.0413000000003ms 500 text/plain
2020-03-03 17:27:10.932 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 17:27:12.170 +03:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidSignatureException: IDX10511: Signature validation failed. Keys tried: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. 
kid: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. 
Exceptions caught:
 '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-03 17:27:12.191 +03:30 [INF] Bearer was not authenticated. Failure message: IDX10511: Signature validation failed. Keys tried: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. 
kid: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. 
Exceptions caught:
 '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-03 17:27:12.199 +03:30 [INF] Authorization failed.
2020-03-03 17:27:12.209 +03:30 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-03 17:27:12.212 +03:30 [INF] Request finished in 1279.7183ms 401 
2020-03-03 17:27:55.193 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 17:27:55.230 +03:30 [INF] Successfully validated the token.
2020-03-03 17:27:55.254 +03:30 [INF] Authorization was successful.
2020-03-03 17:27:55.256 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 17:27:55.323 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 17:27:55.391 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
2020-03-03 17:28:59.658 +03:30 [INF] Start installing Hangfire SQL objects...
2020-03-03 17:29:00.061 +03:30 [INF] Hangfire SQL objects installed.
2020-03-03 17:29:00.112 +03:30 [INF] User profile is available. Using 'C:\Users\AliHF\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-03 17:29:00.144 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 17:29:00.147 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 17:29:00.149 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2020-03-03 17:29:00.258 +03:30 [INF] Starting Hangfire Server using job storage: 'SQL Server: .@HangfireSell'
2020-03-03 17:29:00.267 +03:30 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2020-03-03 17:29:00.268 +03:30 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:01
2020-03-03 17:29:00.587 +03:30 [INF] Server desktop-al52q8t:11860:da650cf4 successfully announced in 309/7174 ms
2020-03-03 17:29:00.587 +03:30 [INF] Server desktop-al52q8t:11860:95bf232d successfully announced in 408/1766 ms
2020-03-03 17:29:00.607 +03:30 [INF] Server desktop-al52q8t:11860:95bf232d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 17:29:00.607 +03:30 [INF] Server desktop-al52q8t:11860:da650cf4 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...
2020-03-03 17:29:01.046 +03:30 [INF] Server desktop-al52q8t:11860:95bf232d all the dispatchers started
2020-03-03 17:29:01.155 +03:30 [INF] Server desktop-al52q8t:11860:da650cf4 all the dispatchers started
2020-03-03 17:29:02.513 +03:30 [INF] Now listening on: https://localhost:5001
2020-03-03 17:29:02.515 +03:30 [INF] Now listening on: http://localhost:5000
2020-03-03 17:29:02.518 +03:30 [INF] Application started. Press Ctrl+C to shut down.
2020-03-03 17:29:02.519 +03:30 [INF] Hosting environment: Development
2020-03-03 17:29:02.521 +03:30 [INF] Content root path: C:\Users\AliHF\Source\Repos\SellAPI\SellAPI
2020-03-03 17:29:04.064 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/index.html  
2020-03-03 17:29:04.555 +03:30 [INF] Request finished in 492.7418ms 404 
2020-03-03 17:29:04.599 +03:30 [INF] Request starting HTTP/2 GET https://localhost:5001/favicon.ico  
2020-03-03 17:29:04.633 +03:30 [INF] Request finished in 34.6375ms 0 
2020-03-03 17:29:10.466 +03:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/Product/  
2020-03-03 17:29:11.414 +03:30 [INF] Successfully validated the token.
2020-03-03 17:29:11.436 +03:30 [INF] Authorization was successful.
2020-03-03 17:29:11.439 +03:30 [INF] Executing endpoint 'SellAPI.Controllers.ProductController.GetAll (SellAPI)'
2020-03-03 17:29:11.578 +03:30 [INF] Route matched with {action = "GetAll", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller SellAPI.Controllers.ProductController (SellAPI).
2020-03-03 17:29:11.677 +03:30 [INF] Executing action method SellAPI.Controllers.ProductController.GetAll (SellAPI) - Validation state: "Valid"
